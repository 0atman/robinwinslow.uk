<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title type="text" xml:lang="en">Canonical posts | by Robin</title>
    <link type="application/atom+xml" href="https://robinwinslow.co.uk/rss-canonical.xml" rel="self"/>
    <link type="text/html" href="https://robinwinslow.co.uk/files/postsbytag/#canonical" rel="alternate"/>
    <updated>2017-07-17T16:25:01+00:00</updated>
    <id>https://robinwinslow.co.uk/files/postsbytag/#canonical</id>
    <author>
        <name>Robin Winslow</name>
    </author>
    <rights>Creative commons Attribution-ShareAlike 3.0: Please copy, modify and reshare my work.</rights>

    
    <entry>
        <title type="html">Fix Docker&#39;s networking DNS config</title>
        <link href="https://robinwinslow.co.uk/2016/06/23/fix-docker-networking-dns/"/>
        <updated>2016-06-23T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2016/06/23/fix-docker-networking-dns</id>
        <content type="html">&lt;p&gt;Sometimes, &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;&amp;#39;s internet connectivity won&amp;#39;t be working properly, which can lead to a number of obscure errors with your applications. In my experience, this is usually because &lt;a href=&quot;http://en.wikipedia.org/wiki/Domain_name_system&quot;&gt;DNS&lt;/a&gt; lookups are failing in Docker images.&lt;/p&gt;

&lt;p&gt;If you &lt;em&gt;know&lt;/em&gt; it&amp;#39;s a DNS problem and you&amp;#39;re in a hurry, &lt;a href=&quot;#the-permanent-system-wide-fix&quot;&gt;jump straight to the system-wide solution&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;is-dns-the-problem&quot;&gt;Is DNS the problem?&lt;/h1&gt;

&lt;p&gt;eeeeFortunately it&amp;#39;s easy to test Docker&amp;#39;s DNS.&lt;/p&gt;

&lt;p&gt;First, check that basic internet connectivity is working by pinging a public IP address. It should succeed, giving you output similar to this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;$ docker run busybox ping -c 1 192.203.230.10  # Ping a London-based NASA root nameserver
PING 192.203.230.10 (192.203.230.10): 56 data bytes
64 bytes from 192.203.230.10: seq=0 ttl=53 time=113.866 ms

--- 192.203.230.10 ping statistics ---
1 packets transmitted, 1 packets received, 0% packet loss
round-trip min/avg/max = 113.866/113.866/113.866 ms

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But now try resolving the domain &lt;code&gt;google.com&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;$ docker run busybox nslookup google.com
Server:    8.8.8.8
Address 1: 8.8.8.8
nslookup: can&#39;t resolve &#39;google.com&#39;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If it fails as shown above then there is a problem resolving DNS.&lt;/p&gt;

&lt;h1 id=&quot;why&quot;&gt;Why?&lt;/h1&gt;

&lt;p&gt;By default, if Docker can&amp;#39;t find a DNS server locally defined in your &lt;code&gt;/etc/resolv.conf&lt;/code&gt; file, &lt;a href=&quot;https://docs.docker.com/engine/userguide/networking/configure-dns/&quot;&gt;containers will default&lt;/a&gt; to using &lt;a href=&quot;https://developers.google.com/speed/public-dns/&quot;&gt;Google&amp;#39;s public DNS server&lt;/a&gt;, &lt;code&gt;8.8.8.8&lt;/code&gt;, to resolve DNS.&lt;/p&gt;

&lt;p&gt;In some networks, like &lt;a href=&quot;http://www.canonical.com/about#office-row&quot;&gt;Canonical&amp;#39;s London office&lt;/a&gt; network where I work, the administrators intentionally block the use of public DNS servers to encourage people to use the network&amp;#39;s own DNS server.&lt;/p&gt;

&lt;p&gt;In this case, Docker containers using the default configuration won&amp;#39;t be able to resolve DNS, rendering the internet effectively unuseable from within those containers.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve &lt;a href=&quot;https://github.com/docker/docker/issues/23910&quot;&gt;filed a bug about this issue&lt;/a&gt;, although I don&amp;#39;t yet know when or if it might be addressed.&lt;/p&gt;

&lt;h1 id=&quot;the-quick-fix-overriding-dockers-dns&quot;&gt;The quick fix: Overriding Docker&amp;#39;s DNS&lt;/h1&gt;

&lt;p&gt;Fortunately, it&amp;#39;s fairly easy to directly run a docker container with a custom DNS server.&lt;/p&gt;

&lt;h2 id=&quot;discover-the-address-of-your-dns-server&quot;&gt;Discover the address of your DNS server&lt;/h2&gt;

&lt;p&gt;You can find out what network&amp;#39;s DNS server from within &lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt; as follows:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;$ nmcli dev show | grep &#39;IP4.DNS&#39;
IP4.DNS[1]:                             10.0.0.2

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;run-docker-with-the-new-dns-server&quot;&gt;Run Docker with the new DNS server&lt;/h2&gt;

&lt;p&gt;To run a docker container with this DNS server, provide the &lt;code&gt;--dns&lt;/code&gt; flag to the &lt;code&gt;run&lt;/code&gt; command. For example, let&amp;#39;s run the command we used to check if DNS is working:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;$ docker run --dns 10.0.0.2 busybox nslookup google.com
Server:    10.0.0.2
Address 1: 10.0.0.2
Name:      google.com
Address 1: 2a00:1450:4009:811::200e lhr26s02-in-x200e.1e100.net
Address 2: 216.58.198.174 lhr25s10-in-f14.1e100.net

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that&amp;#39;s what success looks like.&lt;/p&gt;

&lt;h1 id=&quot;the-permanent-system-wide-fix&quot;&gt;The permanent system-wide fix&lt;/h1&gt;

&lt;p&gt;The above solution is all very well if you&amp;#39;re only temporarily inside a restrictive network and you only need to run containers directly.&lt;/p&gt;

&lt;p&gt;However, most of the time you&amp;#39;ll want this to work by default and keep working on your system, and for any other programs that rely on Docker.&lt;/p&gt;

&lt;h2 id=&quot;update-the-docker-daemon&quot;&gt;Update the Docker daemon&lt;/h2&gt;

&lt;p&gt;To achieve this, you need to change the DNS settings of the Docker daemon. You can set the default options for the docker daemon by creating a &lt;a href=&quot;https://docs.docker.com/engine/reference/commandline/dockerd/#/daemon-configuration-file&quot;&gt;daemon configuration file&lt;/a&gt; at &lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You should create this file with the following contents to set two DNS, firstly your network&amp;#39;s DNS server, and secondly the Google DNS server to fall back to in case that server isn&amp;#39;t available:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;dns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.0.0.2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;8.8.8.8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then restart the docker service:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;sudo service docker restart

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;testing-the-fix&quot;&gt;Testing the fix&lt;/h2&gt;

&lt;p&gt;Now you should be able to ping &lt;code&gt;google.com&lt;/code&gt; successfully from any Docker container without explicitly overriding the DNS server, e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;$ docker run busybox nslookup google.com
Server:    10.0.0.2
Address 1: 10.0.0.2
Name:      google.com
Address 1: 2a00:1450:4009:811::200e lhr26s02-in-x200e.1e100.net
Address 2: 216.58.198.174 lhr25s10-in-f14.1e100.net

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </entry>
    
    <entry>
        <title type="html">Python learnings from PyCon</title>
        <link href="https://robinwinslow.co.uk/2015/09/29/pycon-python-learnings/"/>
        <updated>2015-09-29T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2015/09/29/pycon-python-learnings</id>
        <content type="html">&lt;p&gt;(Also published &lt;a href=&quot;http://design.canonical.com/2015/10/python-learnings-from-pycon/&quot; title=&quot;design.canonical.com: Python learnings from PyCon&quot;&gt;on Canonical&amp;#39;s design team blog&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;The weekend before last, I went to &lt;a href=&quot;http://www.pyconuk.org/schedule/flat/&quot; title=&quot;PyCon UK 2015 schedule&quot;&gt;PyCon UK 2015&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I already wrote about &lt;a href=&quot;/2015/09/24/pycon-friendly-inspiring/&quot; title=&quot;Keynotes from my first PyCon - friendly and inspiring&quot;&gt;the keynotes&lt;/a&gt;, which were more abstract. Here
I&amp;#39;m going to talk about the other talks I saw, which were generally more
technical or at least had more to do with Python.&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;

&lt;p&gt;The talks I saw covered a whole range of topics - from testing through
documentation and ways to achieve simplicity to leadership. Here are some key
take-aways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#15-30-leadership-of-technical-teams-owen-campbell&quot; title=&quot;Leadership of Technical Teams - Owen Campbell&quot;&gt;Technical leaders should&lt;/a&gt; take every opportunity practice various leadership styles&lt;/li&gt;
&lt;li&gt;Instead of answering questions about how to use software directly, &lt;a href=&quot;#17-00-document-all-the-things-kristian-glass&quot; title=&quot;Document all the things - Kristian Glass&quot;&gt;try pair documenting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ask users for as little of their data as possible, and be &lt;a href=&quot;#11-00-asking-about-gender-the-whats-whys-and-hows-claire-gowler&quot; title=&quot;Asking About Gender - the Whats, Whys and Hows - Claire Gowler&quot;&gt;permissive in your validation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#11-30-finding-more-bugs-with-less-work-david-r-maciver&quot; title=&quot;Finding more bugs with less work - David R. MacIver&quot;&gt;Hypothesis is a useful library&lt;/a&gt; for generating test cases - keep it in mind&lt;/li&gt;
&lt;li&gt;&amp;quot;&lt;a href=&quot;#10-00-simplicity-is-a-feature-cory-benfield&quot; title=&quot;Simplicity Is A Feature - Cory Benfield&quot;&gt;Simplicity is about defaults&lt;/a&gt;&amp;quot; - make the interfaces for your software as simple as possible&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#11-00-how-not-to-argue-a-recipe-for-more-productive-tech-conversations-harry-percival&quot; title=&quot;How (not) to argue - a recipe for more productive tech conversations - Harry Percival&quot;&gt;It&amp;#39;s worthwhile&lt;/a&gt; practicing humility and patience in technical discussions&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#11-30-fido-the-dog-ate-my-password-alex-willmer&quot; title=&quot;FIDO - The dog ate my password - Alex Willmer&quot;&gt;FIDO&amp;#39;s U2F and UAF standards&lt;/a&gt; are just starting to gain support - keep an eye on them&lt;/li&gt;
&lt;li&gt;Python &lt;a href=&quot;#14-30-data-visualisation-with-python-and-javascript-crafting-a-data-visualisation-for-the-web-kyran-dale&quot; title=&quot;Data Visualisation with Python and Javascript - crafting a data-visualisation for the web - Kyran Dale&quot;&gt;has some good tools&lt;/a&gt; for managing data&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;the-talks&quot;&gt;The talks&lt;/h1&gt;

&lt;p&gt;Following are slightly more in-depth summaries of the talks I thought
were interesting.&lt;/p&gt;

&lt;h2 id=&quot;friday&quot;&gt;Friday&lt;/h2&gt;

&lt;h3 id=&quot;15-30-leadership-of-technical-teams-owen-campbell&quot;&gt;15:30: &lt;a href=&quot;http://www.pyconuk.org/talks/leadership-of-technical-teams/&quot; title=&quot;PyCon UK: Leadership of Technical Teams&quot;&gt;Leadership of Technical Teams&lt;/a&gt; - Owen Campbell&lt;/h3&gt;

&lt;p&gt;There were two key points I took away from this talk. The first was Owen&amp;#39;s
suggestion that leaders should take every opportunity to practice leading.
Find opportunities in your personal life to lead teams of all sorts.&lt;/p&gt;

&lt;p&gt;The second point was more complex. He suggested that all leaders exist on two
spectra:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Amount of control: &lt;em&gt;hand-off&lt;/em&gt; to &lt;em&gt;dictatorial&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Knowledge of the field: &lt;em&gt;novice&lt;/em&gt; to &lt;em&gt;expert&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The less you know about a field the more hands-off you should
be. And conversely, if you&amp;#39;re the only one who knows what you&amp;#39;re talking about,
you should probably be more of a dictator.&lt;/p&gt;

&lt;p&gt;Although he cautioned that people tend to mis-estimate their ability, and
particularly when it comes to process (e.g. agile), people think they know
more than they do. No-one is really an expert on process.&lt;/p&gt;

&lt;p&gt;He suggested that leading technical teams is particularly challenging because
you slide up and down the knowledge scale on a minute-to-minute basis sometimes,
so you have to learn to be authoritative one moment and then permissive the
next, as appropriate.&lt;/p&gt;

&lt;h3 id=&quot;17-00-document-all-the-things-kristian-glass&quot;&gt;17:00: &lt;a href=&quot;http://www.pyconuk.org/talks/document-all-the-things/&quot; title=&quot;PyCon UK: Document all the things&quot;&gt;Document all the things&lt;/a&gt; - Kristian Glass&lt;/h3&gt;

&lt;p&gt;Kristian spoke about the importance, and difficulty, of good documentation.
Here are some particular points he made:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Document &lt;em&gt;why&lt;/em&gt; a step is necessary, as well as &lt;em&gt;what&lt;/em&gt; it is&lt;/li&gt;
&lt;li&gt;Remember that error messages are documentation&lt;/li&gt;
&lt;li&gt;Try &lt;a href=&quot;http://brodzinski.com/2011/04/pair-document-writing.html&quot; title=&quot;Pair Document Writing&quot;&gt;&lt;em&gt;pair documentation&lt;/em&gt;&lt;/a&gt; - novice sitting with expert&lt;/li&gt;
&lt;li&gt;Checklists are great&lt;/li&gt;
&lt;li&gt;Stop answering questions face-to-face. Always write it down instead.&lt;/li&gt;
&lt;li&gt;Github pages are better than wikis (PRs, better tracking)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of Kristian&amp;#39;s main points was that it goes against the grain to write
documentation, &amp;#39;cos the person with the knowledge can&amp;#39;t see why it&amp;#39;s important,
and the novice can&amp;#39;t write the documentation.&lt;/p&gt;

&lt;p&gt;He suggested pair documentation as a solution, which sounds like a good idea,
but I was also wondering if a StackOverflow model might work, where users
submit questions, and the team treat them like bugs - need to stay on top of
answering them. This answer base would then become the documentation.&lt;/p&gt;

&lt;h2 id=&quot;saturday&quot;&gt;Saturday&lt;/h2&gt;

&lt;h3 id=&quot;11-00-asking-about-gender-the-whats-whys-and-hows-claire-gowler&quot;&gt;11:00: &lt;a href=&quot;http://www.pyconuk.org/talks/asking-about-gender-the-whats-whys-and-hows/&quot; title=&quot;PyCon UK: Asking About Gender - the Whats, Whys and Hows&quot;&gt;Asking About Gender - the Whats, Whys and Hows&lt;/a&gt; - Claire Gowler&lt;/h3&gt;

&lt;p&gt;Claire spoke about how so many online forms expect people to be either
simply &amp;quot;male&amp;quot; or &amp;quot;female&amp;quot;, when the truth can be much more complicated.&lt;/p&gt;

&lt;p&gt;My main takeaway from this was the basic point that forms very often ask for
much more information than they need, and make too many assumptions about their
users. When it comes to asking someone&amp;#39;s name, try radically reducing the
complexity by just having one text field called &amp;quot;name&amp;quot;. Or better yet, don&amp;#39;t
even ask their name if you don&amp;#39;t need it.&lt;/p&gt;

&lt;p&gt;I think this feeds into the whole field of simplicity very nicely. A very many
apps try to do much more than they need to, and ask for much more information
than they need. Thinking about how little you know about your user can help
you realise what you actually don&amp;#39;t need to know about your user.&lt;/p&gt;

&lt;h3 id=&quot;11-30-finding-more-bugs-with-less-work-david-r-maciver&quot;&gt;11:30: &lt;a href=&quot;http://www.pyconuk.org/talks/finding-more-bugs-with-less-work/&quot; title=&quot;PyCon UK: Finding more bugs with less work&quot;&gt;Finding more bugs with less work&lt;/a&gt; - David R. MacIver&lt;/h3&gt;

&lt;p&gt;David MacIver is the author of the &lt;a href=&quot;https://github.com/DRMacIver/hypothesis&quot; title=&quot;Hypothesis is a library for testing your Python code against a much larger range of examples than you would ever want to write by hand.&quot;&gt;Hypothesis testing library&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hypothesis is a Python library for creating unit tests which are simpler to write and more powerful when run, finding edge cases in your code you wouldn’t have thought to look for. It is stable, powerful and easy to add to any existing test suite.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When we write tests normally, we choose the input cases, and we normally do this
and we often end up being really kind to our tests. E.g.:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my_average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What Hypothesis does it help us test with a much wider and more challenging
range of values. E.g.:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;hypothesis.strategies&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floats&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@given&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;floats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test_average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;float_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;average&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;float_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ave&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are many cases where Hypothesis won&amp;#39;t be much use, but it&amp;#39;s certainly
good to have in your toolkit.&lt;/p&gt;

&lt;h2 id=&quot;sunday&quot;&gt;Sunday&lt;/h2&gt;

&lt;h3 id=&quot;10-00-simplicity-is-a-feature-cory-benfield&quot;&gt;10:00: &lt;a href=&quot;http://www.pyconuk.org/talks/simplicity-is-a-feature/&quot; title=&quot;PyCon UK: Simplicity Is A Feature&quot;&gt;Simplicity Is A Feature&lt;/a&gt; - Cory Benfield&lt;/h3&gt;

&lt;p&gt;Cory presented simplicity as the opposite of complexity - that is, the fewer
options something gives you, the more simple and straightforward it is.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Simplicity is about defaults&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To present as simple an interface as possible, the important thing is to have
many sensible defaults as possible, so the user has to make hardly any choices.&lt;/p&gt;

&lt;p&gt;Cory was heavily involved in the &lt;a href=&quot;http://www.python-requests.org/en/latest/&quot; title=&quot;Requests: HTTP for Humans&quot;&gt;Python Requests library&lt;/a&gt;, and presented it as
an example of how to achieve apparent simplicity in a complex tool.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Simple things should be simple, complex things should be possible&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He suggested thinking of an &amp;quot;onion model&amp;quot;, where your application has layers,
so everything is customisable at one of the layers, but the outermost layer
is as simple as possible. He suggested that 3 layers is a good number:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Layer 1: Low-level - everything is customisable, even things that are just
for weird edge-cases.&lt;/li&gt;
&lt;li&gt;Layer 2: Features - a nicer, but still customisable interface for all the core
features.&lt;/li&gt;
&lt;li&gt;Layer 3: Simplicity - hardly any mandatory options, sensible defaults

&lt;ul&gt;
&lt;li&gt;People should always find this first&lt;/li&gt;
&lt;li&gt;Support 80% of users 80% of the time&lt;/li&gt;
&lt;li&gt;In the face of ambiguity do the right thing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;He also mentioned that he likes &lt;a href=&quot;http://tom.preston-werner.com/2010/08/23/readme-driven-development.html&quot; title=&quot;Tom Preston-Werner: Readme Driven Development&quot;&gt;README driven development&lt;/a&gt;, which seems like
is an interesting approach.&lt;/p&gt;

&lt;h3 id=&quot;11-00-how-not-to-argue-a-recipe-for-more-productive-tech-conversations-harry-percival&quot;&gt;11:00: &lt;a href=&quot;http://www.pyconuk.org/talks/how-not-to-argue-a-recipe-for-more-productive-tech-conversations/&quot; title=&quot;PyCon UK: How (not) to argue - a recipe for more productive tech conversations&quot;&gt;How (not) to argue - a recipe for more productive tech conversations&lt;/a&gt; - Harry Percival&lt;/h3&gt;

&lt;p&gt;I think this one could be particularly useful for me.&lt;/p&gt;

&lt;p&gt;Harry spoke about how many people (including him) have a very strong need to
be right. Especially men. Especially those who went to boarding school.
And software development tends to be full of these people.&lt;/p&gt;

&lt;p&gt;Collaboration is particularly important in open source, and strongly
disagreeing with people rarely leads to consensus, in fact it&amp;#39;s more likely to
achieve the opposite. So it&amp;#39;s important that we learn how to get along.&lt;/p&gt;

&lt;p&gt;He suggests various strategies to try out, for getting along with people better:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Try simply giving in, do it someone else&amp;#39;s way once in a while (hard to do graciously)&lt;/li&gt;
&lt;li&gt;Socratic dialogue: Ask someone to explain their solution to you in simple terms&lt;/li&gt;
&lt;li&gt;Dogfooding - try out your idea before arguing for its strength&lt;/li&gt;
&lt;li&gt;Bide your time: Wait for the moment to see how it goes&lt;/li&gt;
&lt;li&gt;Expose yourself to other cultures, where arguments are less acceptable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of this comes down to stepping back, waiting and exercising humility. All
of which are easier said than done, but all of which are very valuable if I
could only manage it.&lt;/p&gt;

&lt;h3 id=&quot;11-30-fido-the-dog-ate-my-password-alex-willmer&quot;&gt;11:30: &lt;a href=&quot;http://www.pyconuk.org/talks/fido-the-dog-ate-my-password/&quot; title=&quot;PyCon UK: FIDO - The dog ate my password&quot;&gt;FIDO - The dog ate my password&lt;/a&gt; - Alex Willmer&lt;/h3&gt;

&lt;p&gt;After covering fairly common ground of how and why passwords suck, Alex
introduced the &lt;a href=&quot;https://fidoalliance.org/about/overview/&quot; title=&quot;About The FIDO Alliance&quot;&gt;FIDO alliance&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The FIDO alliance&amp;#39;s goal is to standardise authentication methods and hopefully
replace passwords. They have created two standards for device-based
authentication to try to replace passwords:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;UAF: First-factor passwordless biometric authentication&lt;/li&gt;
&lt;li&gt;U2F: Second-factor device authentication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Browsers are &lt;a href=&quot;http://caniuse.com/#search=u2f&quot; title=&quot;Can I Use FIDO U2F API ?&quot;&gt;just starting to support U2F&lt;/a&gt;, whereas support for
UAF is farther off. Keep an eye out.&lt;/p&gt;

&lt;h3 id=&quot;14-30-data-visualisation-with-python-and-javascript-crafting-a-data-visualisation-for-the-web-kyran-dale&quot;&gt;14:30: &lt;a href=&quot;http://www.pyconuk.org/talks/data-visualisation-with-python-and-javascript-crafting-a-data-visualisation-toolchain-for-the-web/&quot; title=&quot;PyCon UK: Data Visualisation with Python and Javascript - crafting a data-visualisation for the web&quot;&gt;Data Visualisation with Python and Javascript - crafting a data-visualisation for the web&lt;/a&gt; - Kyran Dale&lt;/h3&gt;

&lt;p&gt;Kyran demoed using Scrapy and Pandas to retrieve the Nobel laureatte data from
Wikipedia, using Flask to serve it as a RESTful API, and then using D3 to create
an interactive browser-based visualisation.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Prepare for when Ubuntu freezes</title>
        <link href="https://robinwinslow.co.uk/2015/09/26/prepare-for-ubuntu-freezing/"/>
        <updated>2015-09-26T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2015/09/26/prepare-for-ubuntu-freezing</id>
        <content type="html">&lt;p&gt;(Also posted &lt;a href=&quot;http://design.canonical.com/2015/09/prepare-for-when-ubuntu-freezes/&quot; title=&quot;Ubuntu Design: Prepare for when Ubuntu freezes&quot;&gt;on design.canonical.com&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;I routinely have at least 20 tabs open in Chrome, 10 files open in
&lt;a href=&quot;https://atom.io/&quot; title=&quot;Atom: A hackable text editor&quot;&gt;Atom&lt;/a&gt; (my editor of choice) and I&amp;#39;m often running virtual machines
as well. This means my poor little &lt;a href=&quot;http://shop.lenovo.com/gb/en/laptops/thinkpad/x-series/x1-carbon/&quot; title=&quot;Thinkpad X1 Carbon&quot;&gt;X1 Carbon&lt;/a&gt; often runs out of
memory, at which point Ubuntu completely freezes up, preventing me from doing
anything at all.&lt;/p&gt;

&lt;p&gt;Just a few days ago I had written a long post which I lost completely when my
system froze, because Atom &lt;a href=&quot;https://github.com/atom/atom/issues/4161&quot; title=&quot;Feature Request: add crash restore&quot;&gt;doesn&amp;#39;t yet&lt;/a&gt; recover documents after
crashes.&lt;/p&gt;

&lt;p&gt;If this sounds at all familiar to you, &lt;strong&gt;I now have a solution&lt;/strong&gt;! (Although
it didn&amp;#39;t save me in this case because it needs to be enabled first - see
below.)&lt;/p&gt;

&lt;h1 id=&quot;oom_kill&quot;&gt;oom_kill&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Magic_SysRq_key&quot; title=&quot;Wikipedia: Magic SysRq key&quot;&gt;magic SysRq key&lt;/a&gt; can run a bunch of kernel-level commands.
One of these commands is called &lt;code&gt;oom_kill&lt;/code&gt;. OOM stands for &amp;quot;Out of memory&amp;quot;,
so &lt;code&gt;oom_kill&lt;/code&gt; will kill the process taking up the most memory, to free some up.
In most cases this should unfreeze &lt;a href=&quot;http://www.ubuntu.com/&quot; title=&quot;Ubuntu&quot;&gt;Ubuntu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can run &lt;code&gt;oom_kill&lt;/code&gt; from the keyboard with the following shortcut:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# Kill the process taking up the most memory
alt + SysRq + f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Except that this is disabled by default on Ubuntu:&lt;/p&gt;

&lt;h1 id=&quot;enabling-sysrq-functions&quot;&gt;Enabling SysRq functions&lt;/h1&gt;

&lt;p&gt;For &lt;a href=&quot;https://bugs.launchpad.net/ubuntu/+source/linux/+bug/194676&quot; title=&quot;SysRq should be limited by default like openSUSE&quot;&gt;security reasons&lt;/a&gt;, SysRq keyboard functions are disabled by
default. To &lt;a href=&quot;http://askubuntu.com/questions/11002/alt-sysrq-reisub-doesnt-reboot-my-laptop/11194#11194&quot; title=&quot;Stack Overflow: Alt + sysrq + REISUB doesn&amp;#39;t reboot my laptop&quot;&gt;enable them&lt;/a&gt;, change the value in the file
&lt;code&gt;/etc/sysctl.d/10-magic-sysrq.conf&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;# /etc/sysctl.d/10-magic-sysrq.conf
kernel.sysrq = 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And to enable the new config run:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo sysctl --system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;sysrq-shortcut-for-the-thinkpad-x1&quot;&gt;SysRq shortcut for the Thinkpad X1&lt;/h1&gt;

&lt;p&gt;Most laptops don&amp;#39;t have a physical &lt;code&gt;SysRq&lt;/code&gt; key. Instead they offer a keyboard
combination to emulate the key. On my Thinkpad, this is &lt;code&gt;fn + s&lt;/code&gt;. However, there&amp;#39;s
a quirk that the &lt;code&gt;SysRq&lt;/code&gt; key is only &amp;quot;pressed&amp;quot; when you release.&lt;/p&gt;

&lt;p&gt;So to run &lt;code&gt;oom_kill&lt;/code&gt; on a Thinkpad, after enabling it, do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Press and hold &lt;code&gt;alt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To emulate &lt;code&gt;SysRq&lt;/code&gt;, press &lt;code&gt;fn&lt;/code&gt; and &lt;code&gt;s&lt;/code&gt; keys together, then release them  (keep holding &lt;code&gt;alt&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;f&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will kill the most expensive process (usually the browser tab running
&lt;code&gt;inbox.google.com&lt;/code&gt; in my case), and freeup some memory.&lt;/p&gt;

&lt;p&gt;Now, if your computer ever freezes up, you can just do this, and hopefully fix
it.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Keynotes from my first PyCon - friendly and inspiring</title>
        <link href="https://robinwinslow.co.uk/2015/09/24/pycon-friendly-inspiring/"/>
        <updated>2015-09-24T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2015/09/24/pycon-friendly-inspiring</id>
        <content type="html">&lt;p&gt;(Also published &lt;a href=&quot;http://design.canonical.com/2015/10/keynotes-from-my-first-pycon-friendly-and-inspiring/&quot; title=&quot;design.canonical.com: Keynotes from my first PyCon – friendly and inspiring&quot;&gt;on Canonical&amp;#39;s design team blog&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;Last weekend I went to my first &lt;a href=&quot;http://www.pyconuk.org/schedule/flat/&quot; title=&quot;PyCon UK 2015 schedule&quot;&gt;Pycon&lt;/a&gt;, my &lt;a href=&quot;https://robinwinslow.uk/2015/09/12/simone-dconstruct-ramble/&quot; title=&quot;My blog about Nina Simone and dConstruct&quot;&gt;second conference
in a fortnight&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The conference runs from
Friday to Monday, with 3 days of talks followed by one day of &amp;quot;sprints&amp;quot;, which
is basically a hack day.&lt;/p&gt;

&lt;p&gt;PyCon has a &lt;a href=&quot;http://www.pyconuk.org/codeofconduct/&quot; title=&quot;PyCon UK code of conduct&quot;&gt;code of conduct&lt;/a&gt; to discourage any form of othering:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Happily, PyCon UK is a diverse community who maintain a reputation as a
friendly, welcoming and dynamic group.&lt;/p&gt;

&lt;p&gt;We trust that attendees will treat each other in a way that reflects the
widely held view that diversity and friendliness are strengths of our
community to be celebrated and fostered.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And for me, the conference lived up to this, with a very friendly feel, and
a lot of diversity in its attendants. The friendly and informal atmosphere was
impressive for such a large event with more than 450 people.&lt;/p&gt;

&lt;p&gt;Unfortunately, the Monday sprint day was cut short by the discovery of an
&lt;a href=&quot;http://www.coventrytelegraph.net/news/coventry-news/video-pictures-huge-world-war-10118277&quot; title=&quot;Huge world war 2 bomb in Coventry&quot;&gt;unexploded bomb&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;many-keynotes-without-much-python&quot;&gt;Many keynotes, without much Python&lt;/h1&gt;

&lt;p&gt;There were a lot of &amp;quot;keynote&amp;quot; talks, with 2 on Friday, and one each on
Saturday and Sunday. And interestingly none of them were really about Python,
instead covering future technology, space travel and the psychology of power
and impostor syndrome.&lt;/p&gt;

&lt;p&gt;But of course there were plenty of Python talks throughout the rest of the day -
you can read about them on &lt;a href=&quot;/2015/09/29/pycon-python-learnings/&quot; title=&quot;Python learnings from PyCon&quot;&gt;my other post&lt;/a&gt;.
And I think it was a good decision to have more abstract keynotes. It shows that
the Python community really is more of a general community than just a special
interest group.&lt;/p&gt;

&lt;h2 id=&quot;van-lindberg-on-data-economics-marx-and-the-internet-of-things&quot;&gt;Van Lindberg on data economics, Marx and the Internet of Things&lt;/h2&gt;

&lt;p&gt;In &lt;a href=&quot;https://www.youtube.com/watch?v=Kj3z4ehMxqY&quot; title=&quot;PYCON UK 2015: Keynote, Van Lindberg, PSF Chair&quot;&gt;the opening keynote&lt;/a&gt; on Friday morning, the &lt;a href=&quot;https://www.python.org/psf/&quot; title=&quot;Python Software Foundation&quot;&gt;PSF&lt;/a&gt;
chairman showed that total computing power
&lt;a href=&quot;https://youtu.be/Kj3z4ehMxqY?t=13m38s&quot; title=&quot;Manufactured Computer Power&quot;&gt;is almost doubling every year&lt;/a&gt;, and that by 2020, the total
processing power in portable devices &lt;a href=&quot;https://youtu.be/Kj3z4ehMxqY?t=15m51s&quot; title=&quot;Extrapolated PC power&quot;&gt;will exceed that in PCs&lt;/a&gt; and
servers.&lt;/p&gt;

&lt;p&gt;He then used the fact that data can&amp;#39;t travel faster than
&lt;a href=&quot;https://www.youtube.com/watch?v=JEpsKnWZrJ8&quot; title=&quot;Admiral Grace Hopper: Nanonsecond&quot;&gt;11.8 inches per nanosecond&lt;/a&gt; to argue that we will see a fundamental
shift in the economics of data processing.&lt;/p&gt;

&lt;p&gt;The big-data models of &lt;a href=&quot;http://www.wired.com/2010/11/facebook-google-showdown/&quot; title=&quot;The big data battle&quot;&gt;today&amp;#39;s tech giants&lt;/a&gt; will be challenged as it
starts to be quicker and make more economic sense to process data at source,
rather than transfer it to distant servers to be processed. Centralised servers
will be relegated to mere aggregators of pre-processed data.&lt;/p&gt;

&lt;p&gt;He &lt;a href=&quot;https://youtu.be/Kj3z4ehMxqY?t=33m35s&quot; title=&quot;Returning to Marx&quot;&gt;likened this to Marx&lt;/a&gt; seizing the &lt;a href=&quot;https://en.wikipedia.org/wiki/Means_of_production&quot; title=&quot;Wikipedia: Means of production&quot;&gt;means of production&lt;/a&gt;
in a movement which will empower users, as our &lt;a href=&quot;https://en.wikipedia.org/wiki/Internet_of_Things&quot; title=&quot;Wikipedia: Internet of Things&quot;&gt;portable Things&lt;/a&gt;
start to hold the real information, and choose who to share it with.&lt;/p&gt;

&lt;p&gt;I really hope he&amp;#39;s right, and that the centralised data companies are
doomed to fail to be replaced by &lt;a href=&quot;http://www.locusmag.com/Perspectives/2015/09/cory-doctorow-what-if-people-were-sensors-not-things-to-be-sensed/&quot; title=&quot;Cory Doctorow: What if people were sensors, not things to be sensed?&quot;&gt;the Internet of Autonomous Things&lt;/a&gt;,
because the world of centralised data is not an equal world.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Does Python have a future on small processors? Isn&amp;#39;t it too inefficient?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a world where all the interesting software is running on light-weight
portable devices, processing efficiency becomes important once again. Van
&lt;a href=&quot;https://youtu.be/Kj3z4ehMxqY?t=32m40s&quot; title=&quot;Importance of Micropython&quot;&gt;used this to argue that&lt;/a&gt; efforts to run Python effectively on
low-powered devices, like &lt;a href=&quot;https://micropython.org/&quot; title=&quot;MicroPython: Python for microcontrollers&quot;&gt;MicroPython&lt;/a&gt;, will be essential for Python
as a language to survive.&lt;/p&gt;

&lt;h2 id=&quot;daniele-procida-all-i-really-want-is-power&quot;&gt;Daniele Procida: All I really want is power&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.youtube.com/watch?v=kntVob0GhyE&quot; title=&quot;Daniele Procida: All I really want is power&quot;&gt;second keynote&lt;/a&gt; was just after lunch on Friday,
&lt;a href=&quot;https://twitter.com/evildmp&quot; title=&quot;@evildmp: Daniele Procida on Twitter&quot;&gt;Daniele Procida&lt;/a&gt;, organiser of &lt;a href=&quot;http://2015.djangocon.eu/&quot; title=&quot;DjangoCon Europe 2015&quot;&gt;DjangoCon Europe&lt;/a&gt; openly
admitted that what he really wanted out of life was power. He put
forward the somewhat controversial idea that power and usefulness are the same
thing, and that ideas without power are useless.&lt;/p&gt;

&lt;p&gt;He made the very good point that power only comes to those who ask for it, or
fight for it. And that if we want power not to be abused, we really need to
talk about it a whole lot more, even though it makes people uncomfortable
(try asking someone their salary).
We should acknowledge who has the power, and what power we have, and watch
where the power goes.&lt;/p&gt;

&lt;p&gt;He suggested that, while in politics or industry, power is very much a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Rivalry_(economics)&quot; title=&quot;Wikipedia: Rivalry (economics)&quot;&gt;rivalled good&lt;/a&gt;, in open source it is entirely an
&lt;a href=&quot;https://en.wikipedia.org/wiki/Public_good&quot; title=&quot;Wikipedia: Public good&quot;&gt;unrivalled good&lt;/a&gt;. The way you grab power in the open source
community is by doing good for the community, by helping out. And so by
weilding power you are actually increasing power for those around you.&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t agree with him on this final point. I think power can be and is hoarded
and abused in the open source community as well. A lot of people use their power
in the community to edge out others, or make others feel small, or to
soak up influence through talks and presentations and then exert their will
over the will of others. I am certainly somewhat guilty of this. Which is why
we should definitely watch the power, especially our own power, to see what
effect it&amp;#39;s having.&lt;/p&gt;

&lt;p&gt;The takeaway maxim from this for me is that we should always make every effort
to &lt;em&gt;share&lt;/em&gt; power, as opposed to jealously guarding it. It&amp;#39;s not that sharing
power in the open source community is inevitable or necessarily comes naturally,
but at least in the open source community sharing power genuinely can help you
gain respect, where I fear the same isn&amp;#39;t so true of politics or industry.&lt;/p&gt;

&lt;h2 id=&quot;dr-simon-sheridan-landing-on-a-comet-from-planning-to-reality&quot;&gt;Dr Simon Sheridan: Landing on a comet: From planning to reality&lt;/h2&gt;

&lt;p&gt;Simon Sheridan was an incredibly most humble and unassuming man, given his
towering achievements. He is a world-class space scientist who was part of the
European Space Agency team who helped to land &lt;a href=&quot;http://www.esa.int/Our_Activities/Space_Science/Rosetta&quot; title=&quot;ESA: Rosetta&quot;&gt;Rosetta&lt;/a&gt; on comet 67P.&lt;/p&gt;

&lt;p&gt;Most of what he mentioned was basically covered in &lt;a href=&quot;https://news.google.com/news/section?q=rosetta&quot; title=&quot;Google news: Rosetta&quot;&gt;the news&lt;/a&gt;, but it
was wonderful to hear it from his perspective.&lt;/p&gt;

&lt;h2 id=&quot;naomi-ceder-confessions-of-a-true-impostor&quot;&gt;Naomi Ceder: Confessions of a True Impostor&lt;/h2&gt;

&lt;p&gt;When, a short way into &lt;a href=&quot;https://www.youtube.com/watch?v=4KErxatqBcs&quot; title=&quot;PYCON UK 2015: Keynote: Confessions of a True Impostor&quot;&gt;her Sunday morning keynote&lt;/a&gt;,
Naomi Ceder &lt;a href=&quot;https://youtu.be/4KErxatqBcs?t=5m40s&quot; title=&quot;How many of you are imposters?&quot;&gt;asked the room&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How many of you would say that you have in some way or another suffered from
&lt;a href=&quot;https://en.wikipedia.org/wiki/Impostor_syndrome&quot; title=&quot;Wikipedia: Imposter syndrome&quot;&gt;imposter syndrome&lt;/a&gt; along with me?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Almost everybody put their hands up. This is why I think this was such an
important talk.&lt;/p&gt;

&lt;p&gt;She didn&amp;#39;t talk about this per se, but contributing to the open source community
is hard. No-one talks about it much, but I certainly feel there&amp;#39;s a lot of
pressure. Because of its very nature, your contributions will be open, to be
seen by anyone, to be criticised by anyone. And let&amp;#39;s face it, your
contributions are never going to be perfect. And the rules of the game aren&amp;#39;t
written down anywhere, so the chance of being ridiculed seem pretty high. Open
source may be a benevolent idea, but it&amp;#39;s damned scary to take part in.&lt;/p&gt;

&lt;p&gt;I believe this is why &lt;a href=&quot;http://www.flosspols.org/deliverables/FLOSSPOLS-D16-Gender_Integrated_Report_of_Findings.pdf&quot; title=&quot;FLOSSPOLS: Gender: Integrated Report of Findings&quot;&gt;less than 2%&lt;/a&gt; of open source contributors are
female, compared with more like 25-30% women in software development in general.
And, as with impostor syndrome, the same trend is true
of &lt;a href=&quot;http://thevarguy.com/open-source-application-software-companies/072015/where-are-women-and-minority-open-source-programmers&quot; title=&quot;Where are the women and minority open source programmers?&quot;&gt;other marginalised groups&lt;/a&gt;.
It&amp;#39;s not surprising to me that people who are
used to being criticised and discriminated against wouldn&amp;#39;t subject
themselves to that willingly.&lt;/p&gt;

&lt;p&gt;And, as Naomi&amp;#39;s question showed, it is not just marginalised people who
feel this pressure, it&amp;#39;s all of us. And it&amp;#39;s a problem. As we know,
&lt;a href=&quot;https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect&quot; title=&quot;Wikipedia: Dunning Kruger effect&quot;&gt;confidence is no indicator of actual ability&lt;/a&gt;, meaning that many
many talented people may be too scared to contribute to open source.&lt;/p&gt;

&lt;p&gt;As Naomi &lt;a href=&quot;https://youtu.be/4KErxatqBcs?t=24m07s&quot; title=&quot;Steriotype threat&quot;&gt;pointed out&lt;/a&gt;, impostor syndrome is a socially created
condition - when people are expected to do badly, &lt;a href=&quot;https://en.wikipedia.org/wiki/Stereotype_threat&quot; title=&quot;Wikipedia: Steriotype threat&quot;&gt;they do badly&lt;/a&gt;.
In fact I completely agree with &lt;a href=&quot;https://youtu.be/4KErxatqBcs?t=14m40s&quot; title=&quot;Let&amp;#39;s go back to the Wikipedia definition&quot;&gt;her suggestion&lt;/a&gt; that the
&lt;a href=&quot;https://en.wikipedia.org/w/index.php?title=Impostor_syndrome&amp;oldid=681534618&quot; title=&quot;Wikipedia: Imposter syndrome (at 23:00 BST, 2015-09-24)&quot;&gt;existing Wikipedia definition of impostor syndrome&lt;/a&gt; (at the time
of writing) could be more sensitively phrased to define it as a
&amp;quot;social condition&amp;quot; rather than a &amp;quot;psychological phenomenon&amp;quot;, as well as
avoiding singling out women.&lt;/p&gt;

&lt;p&gt;While Naomi chose to focus in her talk on how we personally can copy try
to mitigate feelings of being an impostor, I think the really important message
here is one for the community. It&amp;#39;s not our fault that open source is scary,
that&amp;#39;s just the nature of openness. But we have to make it more welcoming.
The success of the open source movement really does depend on it being
diverse and accepting.&lt;/p&gt;

&lt;p&gt;What I think is really interesting is that stereotype threat
&lt;a href=&quot;https://en.wikipedia.org/wiki/Stereotype_threat#Mitigation&quot; title=&quot;Wikipedia: Stereotype threat - mitigation&quot;&gt;can be mitigated&lt;/a&gt; by reminding people of their values, of what&amp;#39;s
important to them. And this is what I hope will save open source. The more we
express our principles and passion for open source, the more we express our
values, the easier it is to counter negative feelings, to be welcoming,
to stop feeling like impostors.&lt;/p&gt;

&lt;h1 id=&quot;a-great-conference&quot;&gt;A great conference&lt;/h1&gt;

&lt;p&gt;Overall, the conference was exhausting, but I&amp;#39;m very grateful that I got to
attend. It was inspiring and informative, and a great example of how to
maintain a great community.&lt;/p&gt;

&lt;p&gt;If you want you can now go and &lt;a href=&quot;/2015/09/29/pycon-python-learnings/&quot; title=&quot;Python learnings from PyCon&quot;&gt;read about the other talks&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Converting projects between Git and Bazaar</title>
        <link href="https://robinwinslow.co.uk/2015/01/10/converting-between-git-and-bzr/"/>
        <updated>2015-01-10T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2015/01/10/converting-between-git-and-bzr</id>
        <content type="html">&lt;p&gt;Here in the &lt;a href=&quot;http://design.canonical.com/team/&quot;&gt;design team&lt;/a&gt; we use both &lt;a href=&quot;http://en.wikipedia.org/wiki/GNU_Bazaar&quot;&gt;Bazaar&lt;/a&gt; and &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt; to keep track our projects&amp;#39; hostory.&lt;/p&gt;

&lt;p&gt;We quite often end up coverting our projects from Bazaar to Git or vice-versa. Here are some tips on how to do that.&lt;/p&gt;

&lt;h1 id=&quot;converting-between-git-and-bazaar&quot;&gt;Converting between Git and Bazaar&lt;/h1&gt;

&lt;p&gt;To convert revision history between Git and Bazaar, we will use their respective &lt;a href=&quot;http://wiki.bazaar.canonical.com/BzrFastImport&quot;&gt;fast&lt;/a&gt;-&lt;a href=&quot;https://www.kernel.org/pub/software/scm/git/docs/git-fast-import.html&quot;&gt;import&lt;/a&gt; features.&lt;/p&gt;

&lt;h2 id=&quot;install-bzr-fastimport&quot;&gt;Install &lt;code&gt;bzr-fastimport&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;In either case, you need the &lt;code&gt;fastimport&lt;/code&gt; plugin for Bazaar, which installs both &lt;code&gt;bzr fast-import&lt;/code&gt; and &lt;code&gt;bzr fast-export&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.bazaar/plugins
bzr branch lp:bzr-fastimport fastimport
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;git-to-bazaar&quot;&gt;Git to Bazaar&lt;/h2&gt;

&lt;p&gt;To convert a Bazaar branch to Git, open a Bazaar branch of your project and do the following:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git init                                        &lt;span class=&quot;c&quot;&gt;# Initialise a new git repo&lt;/span&gt;
bzr fast-export --plain . | git fast-import     &lt;span class=&quot;c&quot;&gt;# Import Bazaar history into Git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now you should have all the revision history for that Bazaar branch in Git:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git log  &lt;span class=&quot;c&quot;&gt;# Check your revision history is in Git&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;small&gt;(From &lt;a href=&quot;http://astrofloyd.wordpress.com/2012/09/06/convert-bzr-to-git/&quot;&gt;Astrofloyd&amp;#39;s blog&lt;/a&gt;)&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;bazaar-to-git&quot;&gt;Bazaar to Git&lt;/h2&gt;

&lt;p&gt;Converting from Bazaar to Git is slightly different. Because Bazaar stores branches in sub-folders, while Git stores branches all in the same directory, when you convert a Git repository to Bazaar, it will create a directory tree for the branches:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;bzr init-repo bzr-repo                                       &lt;span class=&quot;c&quot;&gt;# Create a new Bazaar repository tree&lt;/span&gt;
git fast-export -M --all | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;bzr-repo; bzr fast-import -&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Export Git history into Bazaar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;bzr-repo&lt;/code&gt; will now contain a folder for each branch that was in your Git repository. You&amp;#39;re probably most interested in &lt;code&gt;trunk&lt;/code&gt;, which will be at &lt;code&gt;bzr-repo/trunk&lt;/code&gt;, or perhaps &lt;code&gt;bzr-repo/trunk.remote&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;bzr-repo/trunk  &lt;span class=&quot;c&quot;&gt;# Open the &quot;trunk&quot; branch (equivalent of &quot;master&quot;)&lt;/span&gt;
bzr log | less     &lt;span class=&quot;c&quot;&gt;# Check your revision history is in Bazaar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;small&gt;(From &lt;a href=&quot;http://wiki.bazaar.canonical.com/Scenarios/ConvertFromGit&quot;&gt;the Bazaar wiki&lt;/a&gt;)&lt;/small&gt;&lt;/p&gt;

&lt;h1 id=&quot;keeping-a-project-in-both-git-and-bazaar&quot;&gt;Keeping a project in both Git and Bazaar&lt;/h1&gt;

&lt;p&gt;You may wish to keep a project in both Git and Bazaar.&lt;/p&gt;

&lt;h2 id=&quot;create-ignore-files-for-both-systems&quot;&gt;Create ignore files for both systems&lt;/h2&gt;

&lt;p&gt;As your project may be used in either Git or Bazaar, you should create practically duplicate &lt;a href=&quot;https://help.github.com/articles/ignoring-files&quot;&gt;&lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;.bzrignore&lt;/code&gt; files, the only difference being that the &lt;code&gt;.bzrignore&lt;/code&gt; should ignore the &lt;code&gt;.git&lt;/code&gt; directory, and the &lt;code&gt;.gitignore&lt;/code&gt; should ignore the &lt;code&gt;.bzr&lt;/code&gt; directory. You should also make sure you ignore the &lt;code&gt;bzr-repo&lt;/code&gt; directory - e.g.:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat .gitignore
.bzr/
.sass-cache/
bzr-repo/
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pyc
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat .bzrignore
.git/
.sass-cache/
bzr-repo/
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.pyc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And keep both ignore files in all versions of the project.&lt;/p&gt;

&lt;h2 id=&quot;only-work-in-one-repository&quot;&gt;Only work in one repository&lt;/h2&gt;

&lt;p&gt;It is not practical to be doing your actual work in both systems, because converting from one to the other will overwrite any history in the destination repository. For this reason you need to choose to do all your work in either Git or Bazaar, and then regularly convert it to the other using the above conversion instructions.&lt;/p&gt;

&lt;p&gt;(Originally published &lt;a href=&quot;http://design.canonical.com/2015/01/converting-projects-between-git-and-bazaar/&quot; title=&quot;ubuntu design: Converting projects between Git and Bazaar&quot;&gt;on design.canonical.com&lt;/a&gt;)&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Why I consider advertising to be harmful</title>
        <link href="https://robinwinslow.co.uk/2014/11/03/why-i-consider-advertising-harmful/"/>
        <updated>2014-11-03T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/11/03/why-i-consider-advertising-harmful</id>
        <content type="html">&lt;p&gt;I was just having a discussion with my friends about &lt;a href=&quot;http://ifiwereyoushow.com/&quot;&gt;If I Were You&lt;/a&gt; adding an extra pre-roll advertisement to their latest podcast, and it inspired me to write about my moral opinion of advertising in general.&lt;/p&gt;

&lt;h2 id=&quot;selling-consumers&quot;&gt;Selling consumers&lt;/h2&gt;

&lt;p&gt;By choosing to add an advertisement to a magazine article, TV show or podcast, the content creator is choosing to sell a portion of their audience&amp;#39;s attention. The audience has devoted their time to watch the actual content, but they are instead subjected to watching an advertisement for a random product.&lt;/p&gt;

&lt;p&gt;Now you could argue that everyone who watches any media with ads knows that this is the deal. They are choosing to watch the show, knowing it is ad-supported, so they should be allowed to make that choice. Where&amp;#39;s the harm?&lt;/p&gt;

&lt;p&gt;My problem with it is the insidious effect that it has on that audience, and society at large. The advertising space is up for sale, often simply to the highest bidder. That means that whoever is willing to pay the most gets to subtly manipulate that audience. Are all those audience members aware that that&amp;#39;s what they&amp;#39;re signing up for? And even if they are, what about the wider effect on society?&lt;/p&gt;

&lt;p&gt;Advertising contributes hugely to obesity, the most serious health problem facing western nations, eating disorders and other psychological problems.&lt;/p&gt;

&lt;h2 id=&quot;societal-capture&quot;&gt;Societal capture&lt;/h2&gt;

&lt;p&gt;While it is true (and a great thing) that we are all becoming wiser to the tricks of advertisers, adverts still carry a huge amount of power. We all know that campaign finance for US election races basically decides the outcome. If you can spend billions on your  campaign adverts, you will almost certainly win.&lt;/p&gt;

&lt;p&gt;While possibly not quite as harmful as campaign adverts, I believe the same theory applies to advertising at large. The biggest companies can afford to buy more of these random advertising slots than anyone else, and it has a huge effect on society. Is there anyone who hasn&amp;#39;t heard of Coke or McDonalds? How many women don&amp;#39;t feel a constant pressure to look slim and beautiful? And this advertising also helps the massive corporations keep their monopolies.&lt;/p&gt;

&lt;p&gt;Society is genuinely shaped by the media, and the media is made up of a huge amount of advertisements. This means that the corporations with the most money get to shape society in a way that suits them. And that model for society is always based on bigger profits for those companies, not the interests of society.&lt;/p&gt;

&lt;p&gt;If there were fewer media spots up for sale, I believe the whole of society would benefit immesurably.&lt;/p&gt;

&lt;h2 id=&quot;advertising-is-a-major-culprit-in-runaway-climate-change&quot;&gt;Advertising is a major culprit in runaway climate change&lt;/h2&gt;

&lt;p&gt;The biggest and most obvious problem is that advertising, beyond a shadow of a doubt, fuels consumerism and therefore over-consumption. And this consumerism is terribly bad for the climate - the number one danger facing humanity. We are at a point where developed nations are producing emissions at a catastrophic rate. And there&amp;#39;s no one culprit - our societies are simply structured to be wasteful. We consume more food than we need, and buy a lot more than we consume. We all fly all over the planet all the time. We buy new clothes, and throw out old ones, far more often than we need to.&lt;/p&gt;

&lt;p&gt;And all of this is because bit corporations, who are solely interested in us continuing to consume in ever greater quantities, get to be constantly manipulating everyone within society with their money through paid advertisments.&lt;/p&gt;

&lt;h2 id=&quot;financing-without-ads&quot;&gt;Financing without ads&lt;/h2&gt;

&lt;p&gt;The problem is, so many free services that we currently enjoy would simply not exist without ads. Most of the digital services we rely on are entirely ad-sponsored (&lt;a href=&quot;https://www.facebook.com/&quot;&gt;Facebook&lt;/a&gt;, &lt;a href=&quot;https://www.google.com&quot;&gt;Google&lt;/a&gt; and &lt;a href=&quot;http://www.bing.com/&quot;&gt;Bing&lt;/a&gt;&amp;#39;s myriad services, &lt;a href=&quot;https://twitter.com/&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/&quot;&gt;Youtube&lt;/a&gt;). To be fair, Google have worked to make ads a bit less intrusive, and I do think that&amp;#39;s a good thing, but it&amp;#39;s not like the corporate influence on society seems to have reduced at all since 1998.&lt;/p&gt;

&lt;p&gt;If advertising were somehow less profitable, or just too morally odious to justify, then these digital services would have to be based on considerably different profit models, and they may well not exist at all. The obvious alternate model is to simply charge directly for these services, but only a tiny fraction of the people who use these services today would have signed up to pay even a small amount for them. I can&amp;#39;t pretend this isn&amp;#39;t a difficult problem.&lt;/p&gt;

&lt;p&gt;I would genuinely like to see more companies try different profit models. For example, &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; provide a full free service for open-source work, but charge for privacy, &lt;a href=&quot;https://www.humblebundle.com/&quot;&gt;Humble Bundle&lt;/a&gt; let you &amp;quot;pay what you like&amp;quot; for content, and &lt;a href=&quot;http://www.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt; are financed purely through donations.&lt;/p&gt;

&lt;p&gt;I also believe that if more companies were more honest and open with their finances, the fans would be more happy to help out by paying donations or subscriptions.&lt;/p&gt;

&lt;h2 id=&quot;ethical-advertising&quot;&gt;Ethical advertising&lt;/h2&gt;

&lt;p&gt;Okay, let&amp;#39;s be honest, advertising isn&amp;#39;t going anywhere. But I still hope that we can try to limit the damage by requiring content creators to be more ethical with their advertising.&lt;/p&gt;

&lt;p&gt;I think any advert on any website, TV show, magazine article or whatever should be considered an endorsement. Any criticisms leveled against the advert or the company that made the advert should also be applied to the organisation that chose to give the advertisement air-time. This does happen to some extent (e.g. &lt;a href=&quot;http://www.theguardian.com/world/2014/aug/11/guardian-this-world-anti-hamas-advertisement&quot;&gt;the This World advert in the Guardian&lt;/a&gt;), but I think it should happen more. This would hopefully force organisations to take more ethical responsibility over who they sell advertising space to, which would do a world of good.&lt;/p&gt;

&lt;p&gt;It would also be nice if content-creators were choosing adverts, rather than the media company that distributes the content - e.g. adverts in the breaks in the middle of TV shows should be chosen by the TV show authors. This would mean that the fans of the show would at least be watching adverts that the creator chose.&lt;/p&gt;

&lt;h2 id=&quot;installing-ad-block&quot;&gt;Installing Ad-Block&lt;/h2&gt;

&lt;p&gt;Some think it&amp;#39;s un-ethical to install &lt;a href=&quot;https://adblockplus.org/&quot;&gt;Ad-Block&lt;/a&gt;, as then you are potentially depriving the good content-creators of their revenue.&lt;/p&gt;

&lt;p&gt;Given my ethical position on ads, I disagree with this. I think that one of the ways people can help to shape society for the better is to deliberately (and hopefully, vocally) reject things they find obnoxious. Therefore, the very existence of Ad-Block, and the number of people who have installed it, are a statement in opposition to ad-based financing models. And I hope that it might have some small effect in discouraging organisations from choosing to go that way. &lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">The importance of markup on the information superhighway</title>
        <link href="https://robinwinslow.co.uk/2014/09/18/markup-on-the-information-superhighway/"/>
        <updated>2014-09-18T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/09/18/markup-on-the-information-superhighway</id>
        <content type="html">&lt;p&gt;Following are my long-form notes for a &lt;a href=&quot;http://prezi.com/rkxcaj2hebal/the-information-superhighway/&quot;&gt;short presentation&lt;/a&gt; I gave to the &lt;a href=&quot;http://design.canonical.com/team&quot;&gt;team here at Canonical&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;We are all aware that the Internet is truly today&amp;#39;s information superhighway.&lt;/p&gt;

&lt;p&gt;So much of the world&amp;#39;s information today is written in HTML that it&amp;#39;s almost synonymous with &amp;quot;information&amp;quot;.&lt;/p&gt;

&lt;p&gt;HTML is the basic component of the Internet. We all use the Internet. If you take away CSS and JavaScript, you&amp;#39;re left with just a whole bunch of HTML.&lt;/p&gt;

&lt;p&gt;Understanding the interplay between markup and the Internet is important for anyone who writes content for the Internet&lt;/p&gt;

&lt;h1 id=&quot;simplicity-and-accessibility&quot;&gt;Simplicity and accessibility&lt;/h1&gt;

&lt;h2 id=&quot;openness&quot;&gt;Openness&lt;/h2&gt;

&lt;p&gt;We write JavaScript, CSS and back-end code for simplicity and clarity just so other &lt;em&gt;developers&lt;/em&gt;, and probably only developer in &lt;em&gt;our team&lt;/em&gt; can easily read and work on the code.&lt;/p&gt;

&lt;p&gt;HTML is always the most public and central part of all our information, it is the &lt;em&gt;most import thing&lt;/em&gt; to make as simple and intuitive as possible. Our HTML might be downloaded, viewed or hacked around with by &lt;em&gt;anyone&lt;/em&gt;. They don&amp;#39;t need to be a developer by trade. Anyone who knows how to &amp;quot;view source&amp;quot; can read our markup. Anyone who knows how to click &amp;quot;save web page&amp;quot; can hack around it.&lt;/p&gt;

&lt;h2 id=&quot;good-writing&quot;&gt;Good writing&lt;/h2&gt;

&lt;p&gt;I&amp;#39;d like to suggest that anyone who writes professionally, in today&amp;#39;s world, should have some understanding of how markup works.&lt;/p&gt;

&lt;p&gt;People in more and more areas have to write markup sometimes. Anyone who writes blogs in Wordpress has probably had to edit the raw markup at some point. But also, anyone who writes in any medium that might be converted into markup at any point in the future should be aware of some of the ways it works.&lt;/p&gt;

&lt;p&gt;I would therefore posit that using the correct tag to markup your information is &lt;em&gt;as important as&lt;/em&gt; choosing how to layout your word document (headings, bullet-points etc.).&lt;/p&gt;

&lt;p&gt;If you&amp;#39;re ever writing markup, go and familiarise yourself with the HTML extensions in HTML5. And if you have something new to markup (e.g. a pull-quote, a code-block or a graph) give it a Google, see what best practice is.&lt;/p&gt;

&lt;h2 id=&quot;accessibility&quot;&gt;Accessibility&lt;/h2&gt;

&lt;p&gt;A tempting attitude to take to writing markup is to focus on the average user, or maybe at least users within the inter-quartile range. If you look at Google Analytics, you will see that almost all visits to our sites are from people with modern, HTML5 &amp;amp; ECMAScript 5 capable browsers. As long as things look good on that setup, it&amp;#39;s not &lt;em&gt;so&lt;/em&gt; important to cover the edge-cases.&lt;/p&gt;

&lt;p&gt;I would say that there are likely many flaws in this analysis. One is that maybe instead of hurting 1% of people by not worrying about the edge-cases, we&amp;#39;re hurting 50% of the people, 2% of the time. Which, in terms of public opinion, is worse.&lt;/p&gt;

&lt;p&gt;For example, if I try to load a website on the train (which I do more often than most, but many people do occasionally), there is a high likelihood that my connection will drop half-way through and I&amp;#39;ll get a partially loaded page. At this point, since I will have downloaded the markup first, it is paramount that the markup looks sensible and contains all the relevant information.&lt;/p&gt;

&lt;p&gt;Fortunately, there&amp;#39;s a simple formula - if you understand the &lt;em&gt;basic&lt;/em&gt; components for the web and write in them as simply and straightforwardly as you can, first, then most things will just work.&lt;/p&gt;

&lt;p&gt;One of the beautiful things about the web is it&amp;#39;s actually impossible to predict exactly how people are going to want to use it. But simplicity and directness are your friends.&lt;/p&gt;

&lt;h1 id=&quot;referencing&quot;&gt;Referencing&lt;/h1&gt;

&lt;p&gt;The Internet is a collection of links. The real genius of HTML is its extremely light referencing system.&lt;/p&gt;

&lt;p&gt;Referencing has been a core component of scientific work forever, but HTML and the Internet bring that scientific process to into the commons.&lt;/p&gt;

&lt;p&gt;Not only that, but the whole structure of the Internet depends on references. Good linking makes documents more understandable - it&amp;#39;s easy to follow a link to find out more about a base concept you don&amp;#39;t properly understand.&lt;/p&gt;

&lt;p&gt;People follow links to discover new content, but more importantly, search engines use these links to find new content and to categorise it for searching. The quantity, specificity and wording of your links contribute to the strength of the Internet.&lt;/p&gt;

&lt;p&gt;This is where an understanding matters not just to people who write in HTML, but anyone who writes content for the Internet.&lt;/p&gt;

&lt;h2 id=&quot;link-often&quot;&gt;Link often&lt;/h2&gt;

&lt;p&gt;When you&amp;#39;re writing, especially if you&amp;#39;re explaining a concept, if ever you use a term which you think could be described in more depth, find a link for it. People will thank you.&lt;/p&gt;

&lt;h2 id=&quot;link-text&quot;&gt;Link text&lt;/h2&gt;

&lt;p&gt;Rather than just adding the full link into the page&amp;#39;s text (e.g. &amp;quot;see: www.example.com&amp;quot;), or writing &amp;quot;click here&amp;quot;, add the link to a relevant part of your sentence. This is important because search engines will use your link text to help describe what that link is about.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s also helpful if your link text is not exactly the same as simply the title of the post you&amp;#39;re linking to. This is because it&amp;#39;s helpful for that page to be described in many different ways, organically, by people linking to it.&lt;/p&gt;

&lt;h2 id=&quot;ids-and-anchors&quot;&gt;IDs and anchors&lt;/h2&gt;

&lt;p&gt;Your readers will thank you for specific linking. If the topic you&amp;#39;re trying to cover with your link is under a sub-heading half way down the document, see if you can find an anchor which will take them straight there (example.com#heading3).&lt;/p&gt;

&lt;p&gt;On the development side, I believe that responsible HTML will contain IDs for this reason. Each heading, sub-heading or useful document section should ideally have an ID set on it, so people can link directly to that section if they need to.&lt;/p&gt;

&lt;h1 id=&quot;thank-you&quot;&gt;Thank you&lt;/h1&gt;

&lt;p&gt;You&amp;#39;re not going to do most of what I&amp;#39;ve said above, most of the time. But I think just keeping it in mind will make a difference. Learning how to write responsibly for the web is a creative and infinite journey. But every time you publish anything, and even better if you make an extra link or find a new more specific markup tag, you&amp;#39;re strengthening the Internet. Thank you.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Supporting net neutrality and the Internet Slowdown</title>
        <link href="https://robinwinslow.co.uk/2014/09/09/supporting-net-neutrality/"/>
        <updated>2014-09-09T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/09/09/supporting-net-neutrality</id>
        <content type="html">&lt;p&gt;(Also posted &lt;a href=&quot;http://blog.canonical.com/2014/09/09/supporting-net-neutrality-and-the-internet-slowdown/&quot;&gt;on the Canonical blog&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;On 10th September 2014, Canonical are joining in with &lt;a href=&quot;https://www.battleforthenet.com/sept10th/&quot; title=&quot;Battle for the net - September 10th&quot;&gt;Internet Slowdown day&lt;/a&gt; to support the fight for net neutrality.&lt;/p&gt;

&lt;p&gt;Along with &lt;a href=&quot;http://www.reddit.com/&quot; title=&quot;Reddit&quot;&gt;Reddit&lt;/a&gt;, &lt;a href=&quot;https://www.tumblr.com/&quot; title=&quot;Tumblr&quot;&gt;Tumblr&lt;/a&gt;, &lt;a href=&quot;http://boingboing.net/&quot; title=&quot;Boing boing&quot;&gt;Boing Boing&lt;/a&gt;, &lt;a href=&quot;https://www.kickstarter.com/&quot; title=&quot;Kickstarter&quot;&gt;Kickstarter&lt;/a&gt; and many more sites, we will be sporting banners on our main sites, &lt;a href=&quot;http://www.ubuntu.com/&quot; title=&quot;Ubuntu.com&quot;&gt;www.ubuntu.com&lt;/a&gt; and &lt;a href=&quot;http://www.canonical.com/&quot; title=&quot;Canonical.com&quot;&gt;www.canonical.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;http://blog.canonical.com/wp-content/uploads//banner.min_1.css&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.battleforthenet.com/?from=banner&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;a href=&quot;https://www.battleforthenet.com/?from=banner&quot;&gt;
&lt;div id=&quot;banner&quot; class=&quot;light&quot; style=&quot;display: block; max-width: 350px; float: right; margin: 1em&quot;&gt;
&lt;div id=&quot;loader&quot;&gt;
&lt;div class=&quot;spinner&quot;&gt;
&lt;div class=&quot;blade d01&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d02&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d03&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d04&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d05&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d06&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d07&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d08&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d09&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d10&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d11&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;blade d12&quot;&gt;
&lt;div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;text1&quot; style=&quot;opacity: 1;&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
If there were Internet slow lanes, you’d still be waiting.
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&quot;text2&quot; style=&quot;opacity: 0;&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;strong&gt;Protect Internet freedom.&lt;/strong&gt;&lt;br&gt;
&lt;em&gt;Defend net neutrality.&lt;/em&gt;&lt;p&gt;&lt;/p&gt;
&lt;div&gt;Take action&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;net-neutrality&quot;&gt;Net neutrality&lt;/h2&gt;

&lt;p&gt;From &lt;a href=&quot;http://en.wikipedia.org/wiki/Net_neutrality&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Net neutrality is the principle that Internet service providers and governments should treat all data on the Internet equally, not discriminating or charging differentially by user, content, site, platform, application, type of attached equipment, and modes of communication.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;internet-slowdown-day&quot;&gt;Internet Slowdown day&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/hashtag/internetslowdown&quot; title=&quot;Twitter - #InternetSlowdown&quot;&gt;#InternetSlowdown&lt;/a&gt; day is in protest to the &lt;a href=&quot;http://en.wikipedia.org/wiki/Net_neutrality&quot; title=&quot;Wikipedia - FCC&quot;&gt;FCC’s plans&lt;/a&gt; to allow ISPs in America to offer “paid prioritization” of their traffic to certain companies.&lt;/p&gt;

&lt;p&gt;If large companies were allowed to pay ISPs to prioritise their traffic, it would be much harder for competing companies to enter the market, effectively giving large corporations a greater monopoly.&lt;/p&gt;

&lt;p&gt;I believe that internet service providers should conform to &lt;a href=&quot;http://en.wikipedia.org/wiki/Common_carrier&quot; title=&quot;Wikipedia: Common carrier&quot;&gt;common carrier&lt;/a&gt; laws where the carrier is required to provide service to the general public without discrimination.&lt;/p&gt;

&lt;p&gt;If you too support net neutrality, please consider signing the &lt;a href=&quot;https://www.battleforthenet.com/&quot; title=&quot;Battle for the net petition&quot;&gt;Battle for the net petition&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Saving ubuntu.com on download day: caching location specific pages</title>
        <link href="https://robinwinslow.co.uk/2014/08/29/saving-ubuntu-com-download-day/"/>
        <updated>2014-08-29T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/08/29/saving-ubuntu-com-download-day</id>
        <content type="html">&lt;p&gt;&lt;small&gt;(This article is was &lt;a href=&quot;http://design.canonical.com/2014/08/saving-ubuntu-com-on-download-day-caching-location-specific-pages/&quot;&gt;originally posted on design.canonical.com&lt;/a&gt;)&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;On release day we can get up to 8,000 requests a second to &lt;a href=&quot;http://ubuntu.com&quot;&gt;ubuntu.com&lt;/a&gt; from people trying to download the new release. In fact, last October (&lt;a href=&quot;http://en.wikipedia.org/wiki/Ubuntu_13.10_Saucy_Salamander#Ubuntu_13.10_.28Saucy_Salamander.29&quot;&gt;13.10&lt;/a&gt;) was the first release day in a long time that the site didn&amp;#39;t crash under the load at some point during the day (huge credit to the &lt;a href=&quot;http://www.ubuntu.com/management/ubuntu-advantage&quot;&gt;infrastructure team&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Ubuntu.com has been running on &lt;a href=&quot;https://www.drupal.org/&quot;&gt;Drupal&lt;/a&gt;, but we&amp;#39;ve been gradually migrating it to a more bespoke &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; based system. In March we started work on migrating the download section in time for the release of &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_14.04_LTS_.28Trusty_Tahr.29&quot;&gt;Trusty Tahr&lt;/a&gt;. This was a prime opportunity to look for ways to reduce some of the load on the servers.&lt;/p&gt;

&lt;h2 id=&quot;choosing-geolocated-download-mirrors-is-hard-work-for-an-application&quot;&gt;Choosing &lt;a href=&quot;http://en.wikipedia.org/wiki/Geolocation&quot;&gt;geolocated&lt;/a&gt; download mirrors is hard work for an application&lt;/h2&gt;

&lt;p&gt;When someone downloads Ubuntu from ubuntu.com (on &lt;a href=&quot;http://www.ubuntu.com/download/desktop/thank-you?version=14.04.1&amp;architecture=amd64&quot;&gt;a thank-you page&lt;/a&gt;), they are actually sent to one of the &lt;a href=&quot;https://launchpad.net/ubuntu/+cdmirrors&quot;&gt;300 or so mirror sites&lt;/a&gt; that&amp;#39;s &lt;a href=&quot;http://en.wikipedia.org/wiki/Geolocation&quot;&gt;nearby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To pick a mirror for the user, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_application&quot;&gt;application&lt;/a&gt; has to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Decide from the client&amp;#39;s &lt;a href=&quot;http://en.wikipedia.org/wiki/Ip_address&quot;&gt;IP address&lt;/a&gt; what country they&amp;#39;re in&lt;/li&gt;
&lt;li&gt;Get the list of mirrors and find the ones that are in their country&lt;/li&gt;
&lt;li&gt;Randomly pick them a mirror, while sending more people to mirrors with higher bandwidth&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This process is by far the most intensive operation on the whole site, not because these tasks are particularly complicated in themselves, but because this needs to be done for each and every user - potentially 8,000 a second while every other page on the site can be aggressively &lt;a href=&quot;https://en.wikipedia.org/wiki/Cache_(computing)&quot;&gt;cached&lt;/a&gt; to prevent most requests from hitting the application itself.&lt;/p&gt;

&lt;p&gt;For the site to be able to handle this load, we&amp;#39;d need to &lt;a href=&quot;https://en.wikipedia.org/wiki/Load_balancing_(computing)&quot;&gt;load-balance&lt;/a&gt; requests across perhaps 40 &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_machine&quot;&gt;VMs&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;can-everything-be-done-client-side&quot;&gt;Can everything be done client-side?&lt;/h2&gt;

&lt;p&gt;Our first thought was to embed the entire mirror list in the &lt;a href=&quot;http://ubuntu.com/download/desktop/thank-you&quot;&gt;thank-you page&lt;/a&gt; and use &lt;a href=&quot;http://en.wikipedia.org/wiki/Javascript&quot;&gt;JavaScript&lt;/a&gt; in the users&amp;#39; browsers to select an appropriate mirror. This would drastically reduce the load on the application, because the download page would then be effectively &lt;a href=&quot;http://en.wikipedia.org/wiki/Static_web_page&quot;&gt;static&lt;/a&gt; and cache-able like every other page.&lt;/p&gt;

&lt;p&gt;The only way to reliably get the user&amp;#39;s location &lt;a href=&quot;http://en.wikipedia.org/wiki/Client-side_scripting&quot;&gt;client-side&lt;/a&gt; is with the &lt;a href=&quot;https://developer.mozilla.org/en/docs/WebAPI/Using_geolocation&quot;&gt;geolocation API&lt;/a&gt;, which &lt;a href=&quot;http://caniuse.com/#search=geolocation&quot;&gt;is only supported by 85% of users&amp;#39; browsers&lt;/a&gt;. Another slight issue is that the user has to give permission before they could be assigned a mirror, which would slightly hinder their experience.&lt;/p&gt;

&lt;p&gt;This solution would inconvenience users just a bit too much. So we found a trade-off:&lt;/p&gt;

&lt;h2 id=&quot;a-mixed-solution-apache-geolocation&quot;&gt;A mixed solution - Apache geolocation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://dev.maxmind.com/geoip/legacy/mod_geoip2/&quot;&gt;mod_geoip2&lt;/a&gt; for Apache can apply server rules based on a user&amp;#39;s location and is much faster than doing geolocation at the application level. This means that we can use Apache to send users to a country-specific version of the download page (e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/thank-you?country=DE&amp;version=12.04.4&amp;architecture=amd64&quot;&gt;the German desktop thank-you page&lt;/a&gt;) by adding &lt;code&gt;&amp;amp;country=GB&lt;/code&gt; to the end of the URL.&lt;/p&gt;

&lt;p&gt;These country specific pages contain the list of mirrors for that country, and each one can now be cached, vastly reducing the load on the server. Client-side JavaScript randomly selects a mirror for the user, weighted by the bandwidth of each mirror, and kicks off their download, without the need for client-side geolocation support.&lt;/p&gt;

&lt;p&gt;This solution was successfully implemented shortly before the release of &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_14.04_LTS_.28Trusty_Tahr.29&quot;&gt;Trusty Tahr&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Using Docker to spin up light Ubuntu containers</title>
        <link href="https://robinwinslow.co.uk/2014/08/28/using-docker-to-spin-up-light-ubuntu-containers/"/>
        <updated>2014-08-28T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/08/28/using-docker-to-spin-up-light-ubuntu-containers</id>
        <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; is a fantastic tool for running &lt;a href=&quot;https://registry.hub.docker.com/&quot;&gt;virtual images&lt;/a&gt; and managing light &lt;a href=&quot;https://linuxcontainers.org/&quot;&gt;Linux containers&lt;/a&gt; extremely quickly.&lt;/p&gt;

&lt;p&gt;One thing this has been very useful for in my job &lt;a href=&quot;http://design.canonical.com/author/nottrobin/&quot;&gt;at Canonical&lt;/a&gt; is quickly running older versions of Ubuntu - for example to test how to install specific packages on &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_12.04_LTS_.28Precise_Pangolin.29&quot;&gt;Precise&lt;/a&gt; when I&amp;#39;m running &lt;a href=&quot;http://en.wikipedia.org/wiki/List_of_Ubuntu_releases#Ubuntu_14.04_LTS_.28Trusty_Tahr.29&quot;&gt;Trusty&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;installing-docker&quot;&gt;Installing Docker&lt;/h1&gt;

&lt;p&gt;The simplest way to &lt;a href=&quot;https://docs.docker.com/installation/ubuntulinux/&quot;&gt;install Docker&lt;/a&gt; on Ubuntu is using the automatic script:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -sSL https://get.docker.io/ubuntu/ | sudo sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You may then want to &lt;a href=&quot;https://docs.docker.com/installation/ubuntulinux/#giving-non-root-access&quot;&gt;authorise your user to run Docker directly&lt;/a&gt; (as opposed to using &lt;code&gt;sudo&lt;/code&gt;) by adding yourself to the &lt;code&gt;docker&lt;/code&gt; group:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo gpasswd -a &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;YOUR-USERNAME] docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You need to log out and back in again before this will take effect.&lt;/p&gt;

&lt;h1 id=&quot;spinning-up-an-old-version-of-ubuntu&quot;&gt;Spinning up an old version of Ubuntu&lt;/h1&gt;

&lt;p&gt;With docker installed, you should be able to run it as follows. The below example is for Ubuntu Precise, but you can replace &amp;quot;precise&amp;quot; with any &lt;a href=&quot;https://registry.hub.docker.com/_/ubuntu/&quot;&gt;available ubuntu version&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mkdir share  &lt;span class=&quot;c&quot;&gt;# Shared folder with docker image - optional&lt;/span&gt;
docker run -v &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;/share:/share -i -t ubuntu:precise /bin/bash  &lt;span class=&quot;c&quot;&gt;# Run ubuntu, with a shared folder&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;root@cba49fae35ce:/#  &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# We&#39;re in!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;-v `pwd`/share:/share&lt;/code&gt; part &lt;a href=&quot;https://docs.docker.com/userguide/dockervolumes/#mount-a-host-directory-as-a-data-volume&quot;&gt;mounts&lt;/a&gt; the local &lt;code&gt;./share/&lt;/code&gt; folder at &lt;code&gt;/share/&lt;/code&gt; within the Docker instance, for easily sharing files with the host OS. Setting this up is optional, but might well be useful.&lt;/p&gt;

&lt;p&gt;There are some import things to note:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is a very stripped-down operating system. You are logged in as the root user, your home directory is the filesystem root (&lt;code&gt;/&lt;/code&gt;), and very few packages are installed. Almost always, the first thing you&amp;#39;ll want to run is &lt;code&gt;apt-get update&lt;/code&gt;. You&amp;#39;ll then almost certainly need to install a few packages before this instance will be of any use.&lt;/li&gt;
&lt;li&gt;Every time you run the above command it will spin up a new instance of the Ubuntu image &lt;em&gt;from scratch&lt;/em&gt;. If you log out, retrieving your current instance in that same state is complicated. So don&amp;#39;t logout until you&amp;#39;re done. Or learn about &lt;a href=&quot;https://docs.docker.com/userguide/usingdocker/&quot;&gt;managing Docker containers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;In some cases, Docker will be unable to resolve DNS correctly, meaning that &lt;code&gt;apt-get update&lt;/code&gt; will fail. In this case, follow &lt;a href=&quot;/2014/08/27/fix-docker-networking/&quot;&gt;the guide to fix DNS&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Host your site with HTTPS for free</title>
        <link href="https://robinwinslow.co.uk/2014/08/26/host-your-site-with-https-for-free/"/>
        <updated>2014-08-26T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/08/26/host-your-site-with-https-for-free</id>
        <content type="html">&lt;p&gt;If you glance up to the address bar, you will see that this post is being served securely. I&amp;#39;ve done this because I believe strongly in the importance of &lt;a href=&quot;http://en.wikipedia.org/wiki/Internet_privacy&quot;&gt;internet privacy&lt;/a&gt;, and I support the &lt;a href=&quot;https://www.resetthenet.org/&quot;&gt;Reset The Net&lt;/a&gt; campaign to encrypt the web.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve done this &lt;em&gt;completely for free&lt;/em&gt;. Here&amp;#39;s how:&lt;/p&gt;

&lt;h1 id=&quot;get-a-free-certificate&quot;&gt;Get a free certificate&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://www.startssl.com/&quot;&gt;StartSSL&lt;/a&gt; isn&amp;#39;t the nicest website in the world to use. However, they will give you a free certificate without too much hassle. Click &amp;quot;Sign up&amp;quot; and follow the instructions.&lt;/p&gt;

&lt;h1 id=&quot;get-an-openshift-bronze-account&quot;&gt;Get an OpenShift Bronze account&lt;/h1&gt;

&lt;p&gt;Sign up to a &lt;a href=&quot;https://www.openshift.com/products/pricing&quot;&gt;RedHat OpenShift Bronze account&lt;/a&gt;. Although this account is free to use, as long as you only use one 1-3 gears, it does require you to provide card details.&lt;/p&gt;

&lt;p&gt;Once you have an account, create a new application. On the application screen, &lt;a href=&quot;https://www.openshift.com/blogs/domain-names-and-ssl-in-the-openshift-web-console&quot;&gt;open the list of domain aliases&lt;/a&gt; by clicking on the aliases link (might say &amp;quot;change&amp;quot;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//i.imgur.com/61cdNL8.png&quot; alt=&quot;Application page - click on aliases&quot;&gt;&lt;/p&gt;

&lt;p&gt;Edit your selected domain name and upload the certificate, chain file and private key. &lt;em&gt;NB: Make sure you upload the chain file&lt;/em&gt;. If the chain file isn&amp;#39;t uploaded initially it may not register later on.&lt;/p&gt;

&lt;h1 id=&quot;pushing-your-site&quot;&gt;Pushing your site&lt;/h1&gt;

&lt;p&gt;Now you can &lt;a href=&quot;https://www.openshift.com/developers/deploying-and-building-applications&quot;&gt;push&lt;/a&gt; any website to the created application and it should be securely hosted.&lt;/p&gt;

&lt;p&gt;Given that you only get 1-3 gears for free, if you have a &lt;a href=&quot;/2013/06/15/static-site-generators/&quot;&gt;static site&lt;/a&gt;, it&amp;#39;s more likely to handle high load. For instance, this site &lt;a href=&quot;https://robinwinslow.uk/2013/06/28/public-analytics-data-for-this-site/&quot;&gt;gets about 250 visitors a day&lt;/a&gt; and runs perfectly fine on the free resources from OpenShift.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Agile philosophy: A summary</title>
        <link href="https://robinwinslow.co.uk/2014/01/10/agile-philosophy/"/>
        <updated>2014-01-10T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/01/10/agile-philosophy</id>
        <content type="html">&lt;p&gt;Following are some guidelines about Agile philosophy that I wrote for my team back in September 2012.&lt;/p&gt;

&lt;p&gt;I also wrote a popular &lt;a href=&quot;http://programmers.stackexchange.com/questions/166570/programming-vs-planning/166591#166591&quot;&gt;StackExchange answer about Agile project planning&lt;/a&gt; which you might fine useful if you&amp;#39;re thinking about implementing Agile.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Agile_web_development&quot;&gt;Agile software development&lt;/a&gt; is a philosophy for managing software projects and teams. It has similarities to &lt;a href=&quot;http://en.wikipedia.org/wiki/Lean_manufacturing&quot;&gt;lean manufacturing&lt;/a&gt; principles for &amp;quot;eliminating waste&amp;quot;.&lt;/p&gt;

&lt;p&gt;The philosophy centers around &lt;a href=&quot;http://en.wikipedia.org/wiki/Agile_software_development#Agile_Manifesto&quot;&gt;the agile manifesto&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We are uncovering better ways of developing software by doing it and helping others do it. Through this work we have come to value:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Individuals and interactions over Processes and tools&lt;/li&gt;
&lt;li&gt;Working software over Comprehensive documentation&lt;/li&gt;
&lt;li&gt;Customer collaboration over Contract negotiation&lt;/li&gt;
&lt;li&gt;Responding to change over Following a plan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is, while there is value in the items on the right, we value the items on the left more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of the various &lt;a href=&quot;http://en.wikipedia.org/wiki/Software_development_methodology&quot;&gt;software development methodologies&lt;/a&gt; out there, &lt;a href=&quot;http://en.wikipedia.org/wiki/Scrum_(development)&quot;&gt;Scrum&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Extreme_Programming&quot;&gt;Extreme programming&lt;/a&gt; particularly try to follow agile software development principles.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Lean_software_development&quot;&gt;Lean software development&lt;/a&gt; is also rapidly gaining support within the agile community.&lt;/p&gt;

&lt;h1 id=&quot;agile-practices-and-principles&quot;&gt;Agile practices and principles&lt;/h1&gt;

&lt;p&gt;Without choosing to follow any one defined methodology for project management, here are some common practices that could be adopted by an agile team:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Maintain a &lt;a href=&quot;http://guide.agilealliance.org/guide/backlog.html&quot;&gt;prioritised backlog&lt;/a&gt; of work with a single backlog manager.&lt;/li&gt;
&lt;li&gt;Have a team &lt;a href=&quot;http://www.allaboutagile.com/the-power-of-a-whiteboard/&quot;&gt;whiteboard&lt;/a&gt; with sticky notes for keeping track of your tasks and blockers - it really helps to have visibility of the work taking place.&lt;/li&gt;
&lt;li&gt;Break down work into &lt;a href=&quot;http://pivotallabs.com/epic-sharding/&quot;&gt;manageable chunks&lt;/a&gt; - each less than a day&amp;#39;s work.&lt;/li&gt;
&lt;li&gt;Structure your stories so they they &lt;a href=&quot;http://itsadeliverything.com/user-story-dependencies-are-more-apparent-than-real&quot;&gt;depend on each other as little as possible&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Try to use &lt;a href=&quot;http://guide.agilealliance.org/guide/relative.html&quot;&gt;relative sizing&lt;/a&gt; to size up work, rather than actual concrete amounts of time. &lt;a href=&quot;https://www.youtube.com/watch?v=90Xx8QVnXRc&quot;&gt;Here&amp;#39;s why&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Have a daily &lt;a href=&quot;http://en.wikipedia.org/wiki/Stand-up_meeting&quot;&gt;stand-up meeting&lt;/a&gt; including as many stake-holders as possible so everyone knows what&amp;#39;s going on and how things are progressing.&lt;/li&gt;
&lt;li&gt;Try to produce the &lt;a href=&quot;http://en.wikipedia.org/wiki/Minimum_viable_product&quot;&gt;minimum viable product&lt;/a&gt; (this principle is linked to &lt;a href=&quot;http://en.wikipedia.org/wiki/Release_early,_release_often&quot;&gt;release early release often&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Iterative_and_incremental_development&quot;&gt;iterative development&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.allaboutagile.com/agile-principle-3-time-waits-for-no-man/&quot;&gt;Fixed timescales, variable requirements&lt;/a&gt; - have fixed production deadlines and structure work such that chunks can be dropped from the iteration if they&amp;#39;re not ready.&lt;/li&gt;
&lt;li&gt;Measure the team&amp;#39;s &lt;a href=&quot;http://en.wikipedia.org/wiki/Velocity_(software_development)&quot;&gt;velocity&lt;/a&gt; and use it to estimate work.&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;http://en.wikipedia.org/wiki/Pair_programming&quot;&gt;pair-programming&lt;/a&gt; for knowledge-sharing and for working through &lt;a href=&quot;http://www.leanagiletraining.com/scrum/what-are-impediments/&quot;&gt;impediments&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Best-practice tips for programmers</title>
        <link href="https://robinwinslow.co.uk/2014/01/08/general-coding-guidelines/"/>
        <updated>2014-01-08T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/01/08/general-coding-guidelines</id>
        <content type="html">&lt;p&gt;I wrote this set of programming principles for my team to follow back in 2012. I&amp;#39;m sure there are many like it, but this one is mine. May you find it useful.&lt;/p&gt;

&lt;h1 id=&quot;writing-code&quot;&gt;Writing code&lt;/h1&gt;

&lt;p&gt;Try to write &lt;a href=&quot;http://en.wikipedia.org/wiki/Self-documenting&quot;&gt;expressive code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Beware &lt;a href=&quot;http://en.wikipedia.org/wiki/Code_bloat&quot;&gt;code bloat&lt;/a&gt; - adhere to the &lt;a href=&quot;http://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it&quot;&gt;YAGNI&lt;/a&gt; principle&lt;/p&gt;

&lt;p&gt;Practicing &lt;a href=&quot;http://en.wikipedia.org/wiki/Behaviour-driven_development&quot;&gt;Behaviour-Driven Development&lt;/a&gt; can help with both of these aims.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gov.uk/designprinciples#second&quot;&gt;Do less&lt;/a&gt;: Before writing a new piece of functionality, go and look for similary solutions that already exist and extend them.&lt;/p&gt;

&lt;h2 id=&quot;code-architecture&quot;&gt;Code architecture&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Namespace_(computer_science)&quot;&gt;Namespace&lt;/a&gt; your classes, and &lt;a href=&quot;http://stackoverflow.com/questions/383947/what-does-it-mean-to-program-to-an-interface&quot;&gt;code to an interface&lt;/a&gt; (this is an implementation of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Design_by_contract&quot;&gt;Design by Contract&lt;/a&gt; principle), and make your interfaces (both programming interfaces and user-interfaces) &lt;a href=&quot;https://www.gov.uk/designprinciples#fourth&quot;&gt;as simple as possible&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Try to learn and comply with all 5 principles of &lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_(object-oriented_design)&quot;&gt;SOLID&lt;/a&gt; (watch &lt;a href=&quot;http://vimeo.com/12350535#at=0&quot;&gt;this great video&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Learn as many &lt;a href=&quot;http://en.wikipedia.org/wiki/Design_patterns&quot;&gt;Design Patterns&lt;/a&gt; as you can to inform your coding, &lt;a href=&quot;http://discuss.joelonsoftware.com/default.asp?joel.3.219431&quot;&gt;but beware of implementing them blindly&lt;/a&gt;. Developers can be over-zealous in their use of Design Patterns and may &lt;a href=&quot;http://loosely-coupled.blogspot.co.uk/2009/03/over-engineering-and-design-patterns.html&quot;&gt;end up over-engineering&lt;/a&gt; a solution.&lt;/p&gt;

&lt;p&gt;Some useful design patterns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/MVC_Pattern&quot;&gt;MVC&lt;/a&gt; (obviously)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Observer_pattern&quot;&gt;The observer pattern&lt;/a&gt; (events)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Adapter_pattern&quot;&gt;The adapter pattern&lt;/a&gt; (for useful abstraction of layers - like the data layer)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Factory_pattern&quot;&gt;The factory method pattern&lt;/a&gt; (although be careful: Creating multiple factory classes is often &lt;a href=&quot;http://en.wikipedia.org/wiki/Overengineering&quot;&gt;overengineering&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;tools&quot;&gt;Tools&lt;/h1&gt;

&lt;p&gt;Try to learn an &lt;a href=&quot;http://en.wikipedia.org/wiki/Integrated_development_environment&quot;&gt;IDE&lt;/a&gt; with advanced features. These can really save you a lot of time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Syntax highlighting&lt;/li&gt;
&lt;li&gt;Auto-complete for function, class and method names&lt;/li&gt;
&lt;li&gt;Auto-formatting&lt;/li&gt;
&lt;li&gt;Code navigation help - e.g. jump to class declaration&lt;/li&gt;
&lt;li&gt;Collapsing of code blocks&lt;/li&gt;
&lt;li&gt;Overviews of code, e.g. a list of all methods within a class&lt;/li&gt;
&lt;li&gt;Debugging tools like break points&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some suggestions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/projects/project.php?id=tools.pdt&quot;&gt;Sublime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.microsoft.com/visualstudio/en-us&quot;&gt;Visual Studio&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/projects/project.php?id=tools.pdt&quot;&gt;Eclipse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.eclipse.org/projects/project.php?id=tools.pdt&quot;&gt;Netbeans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Luminous beings are we</title>
        <link href="https://robinwinslow.co.uk/2014/01/06/luminous-beings-are-we/"/>
        <updated>2014-01-06T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2014/01/06/luminous-beings-are-we</id>
        <content type="html">&lt;h2 id=&quot;a-diary-entry-from-october-15th-2013&quot;&gt;A diary entry from October 15th 2013&lt;/h2&gt;

&lt;p&gt;Today I very much wanted to work on my voice. Work out how to get my message across - feel like I was saying something genuine, something of significance.&lt;/p&gt;

&lt;p&gt;I like the idea of sketches. Particularly sketches about systems and networks. How everyone is connected, and human society grows like an organism, each little autonomous cell influencing each other one. We are like a neural network.&lt;/p&gt;

&lt;p&gt;And I wanted to illustrate how these autonomous nodes make up an ebbing and flowing tide, with each individual or group potentially changing the direction of the tide. We are all connected, we all influence each other, we all have power to change the flow of the tide, but we also are swept along by it. I find this vision inspiring but not intimidating. Any one of us can be the instigator of a change of direction, but we are under no pressure to be.&lt;/p&gt;

&lt;p&gt;Hmm. Some academics probably study sentient fluids.... Like traffic. That would be an interesting topic.&lt;/p&gt;

&lt;p&gt;People grow and develop in this way too. We rush or stagnate through deliberate or accidental events. We are none of us ultimately in control. I believe this absolves any one person of too much responsibility, but at the same time we are all responsible. I wish I could communicate this idea succinctly. I hope a vision like this can lead to people judging each other less. It&amp;#39;s hard to explain how.&lt;/p&gt;

&lt;p&gt;I think this is like a hacker&amp;#39;s vision. There are endless possibilities for this organism. No-one knows where it will go. There is no defined end-goal. We are constantly discovering. Every individual life is a unique exploration. There can be no higher goal than to explore, finding solutions and perspectives that are unique, continuing the exploration.&lt;/p&gt;

&lt;p&gt;This is hacking - life is hacking.&lt;/p&gt;

&lt;p&gt;But somehow I feel like I&amp;#39;m letting down this purpose. I am not exploring as much as I could be. I&amp;#39;m somewhat stagnating. I&amp;#39;d like to be inspiring people, and communicating my thoughts and ideas honestly. I certainly feel like I have thoughts and ideas, unique perspectives, and my current job and my current lifestyle are not realising one tenth of them. How to solve this?&lt;/p&gt;

&lt;p&gt;That&amp;#39;ll do for now. Goodnight, diary.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Writing expressive code</title>
        <link href="https://robinwinslow.co.uk/2013/11/22/expressive-coding/"/>
        <updated>2013-11-22T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/11/22/expressive-coding</id>
        <content type="html">&lt;p&gt;As any coder gains experience, they inevitebly learn more and more ways to solve the same problem.&lt;/p&gt;

&lt;p&gt;The very first consideration is simplicity. We probably want to use as simple and direct a solution as possible - to avoid over-engineering. But the &lt;em&gt;simplest&lt;/em&gt; solution is not necessarily the &lt;em&gt;shortest&lt;/em&gt; solution.&lt;/p&gt;

&lt;p&gt;After simplicity, the very next consideration should be &lt;em&gt;expressiveness&lt;/em&gt;. You should always be thinking about how deeply a new developer is going to have to delve into your code to understand what&amp;#39;s going on.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Code is poetry
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Writing expressive code may help future coders to understand what&amp;#39;s going on. It may even help you in the future. But it may also help you simply to understand the problem. Thinking carefully about how to define and encapsulate the components of your solution will often help you to understand the problem better, leading to a more logical solution.&lt;/p&gt;

&lt;h1 id=&quot;self-documenting-code&quot;&gt;&amp;quot;Self-documenting code&amp;quot;&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Self-documenting_code&quot;&gt;&amp;quot;Self-documenting code&amp;quot;&lt;/a&gt; is about structuring your code and choosing your method and variable names so that your code will be largely self-describing. This is a great practice, and can make some comments redundant:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;$user = new User(); // create a new user object
$user-&amp;gt;loadFromSession(session); // update the user from the session
if ($user-&amp;gt;isAuthenticated()) { ... } // If the user is authenticated...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, as a recent discussion with &lt;a href=&quot;http://twitter.com/karlwilliams&quot;&gt;a friend of mine&lt;/a&gt; highlighted to me, expressive code is not a &lt;em&gt;replacement&lt;/em&gt; for comments - no code is &lt;em&gt;entirely&lt;/em&gt; &amp;quot;self-documenting&amp;quot;. Always write as expresively as you can, but &lt;em&gt;also&lt;/em&gt; always document where it makes sense. Methods, functions and classes should always be summarised with a comment - as mentioned in the &lt;a href=&quot;/2014/01/05/summary-of-python-code-style-conventions/#toc_3&quot;&gt;Python coding conventions&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;wording&quot;&gt;Wording&lt;/h1&gt;

&lt;p&gt;It&amp;#39;s worth thinking carefully about how you name your variables and methods.&lt;/p&gt;

&lt;h2 id=&quot;dont-abbreviate&quot;&gt;Don&amp;#39;t abbreviate&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;uid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// I am unlikely to know what uid stands for without context&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userIdentifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Better&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;be-specific&quot;&gt;Be specific&lt;/h2&gt;

&lt;p&gt;Use as concrete and specific nouns as you can to describe methods and functions:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// bad - generic&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newsLinkClickEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// good - specific&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;encapsulation&quot;&gt;Encapsulation&lt;/h1&gt;

&lt;p&gt;No-one likes to read a really long procedural program. It&amp;#39;s very difficult to follow. It&amp;#39;s much easier to read a shorter set of well-encapsulated method calls. If you need to delve deeper, simply look in the relevant method:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Instead of showing you all the details of how we update the user&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// We encapsulate that in the updateDetails method&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// allowing you to quickly see the top-level processes&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;saveUserDetails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userDetails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateDetails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userDetails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// sets a whole bunch of details on the user&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Converts user data into the correct format, and then saves it in the user store&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;do-you-need-an-else&quot;&gt;Do you need an &lt;code&gt;else&lt;/code&gt;?&lt;/h2&gt;

&lt;p&gt;The use of many &lt;code&gt;if .. else&lt;/code&gt; conditionals make programs confusing. In many cases, the &lt;code&gt;else&lt;/code&gt; part can be encapsulated in a separate method or function call, making the program easier to read:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// With the else&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;permissionGroup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;administrator&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sorry you don&#39;t have permission to delete this article&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Without the else&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deleteArticle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sorry you don&#39;t have permission to delete this article&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In cases where a &lt;code&gt;switch&lt;/code&gt; is used, or multiple &lt;code&gt;if .. else if&lt;/code&gt; statements, you could consider &lt;a href=&quot;http://haacked.com/archive/2013/11/08/death-to-the-if-statement.aspx/&quot;&gt;using different types&lt;/a&gt; instead:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;class User {
    function deleteArticle($article) {
        $success = false;

        if (
            user-&amp;gt;permissionGroup == &#39;administrator&#39;
            || user-&amp;gt;permissionGroup == &#39;editor&#39;
        ) {
            $success = $article-&amp;gt;delete();
        }

        return $success;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can remove the need for this &lt;code&gt;if&lt;/code&gt;, by making special types:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;trait ArticleDeletion {
    function deleteArticle($article) {
        return $article-&amp;gt;delete();
    }
}

class Editor implements User { use ArticleDeletion; }
class Administrator implements User { use ArticleDeletion; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that I&amp;#39;ve deliberately opted &lt;em&gt;not&lt;/em&gt; to make &lt;code&gt;Administrator&lt;/code&gt; inherit from &lt;code&gt;Editor&lt;/code&gt;, but instead compose them separately. This keeps my structure more flat and flexible. This is an example of &lt;a href=&quot;http://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;composition over inheritence&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;depth&quot;&gt;Depth&lt;/h1&gt;

&lt;p&gt;While encapsulation is often a good thing, to make programs easier to understand at the higher level, it&amp;#39;s important to preserve the &lt;a href=&quot;http://en.wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;single responsibility principle&lt;/a&gt; by not encapsulating &lt;a href=&quot;http://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;separate concerns&lt;/a&gt; together.&lt;/p&gt;

&lt;p&gt;For example, one could write:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UpdateFromForm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Imports user data from the page form
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SaveToDatabase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While this is both short and fairly clear, it suffers from two other problems:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The user has to delve further into the code to find basic information, like the name of the Database class, or which form the details are stored in&lt;/li&gt;
&lt;li&gt;If we want to use a different instance of the &lt;code&gt;Database&lt;/code&gt;, we have to edit the &lt;code&gt;User&lt;/code&gt; class, which doesn&amp;#39;t make a whole lot of sense.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In general you should always pass objects around, rather than instantiating them inside each other:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DatabaseManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ImportData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;userData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is more lines, but it is nonetheless clearer what is actually happening, and it&amp;#39;s more versatile.&lt;/p&gt;

&lt;h1 id=&quot;tidiness&quot;&gt;Tidiness&lt;/h1&gt;

&lt;p&gt;Always try to format your code so that it is easily readable. Don&amp;#39;t be afraid of white space, and use indentation sensibly to highlight the structure of your code.&lt;/p&gt;

&lt;p&gt;Where there is an accepted code style guide, you should try to follow it. For example, PHP has the &lt;a href=&quot;https://github.com/php-fig/fig-standards/tree/master/accepted&quot;&gt;FIG standards&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, I don&amp;#39;t think it&amp;#39;s worthwhile being overly anal about code standards (my thinking has evolved on this somewhat) because you&amp;#39;ll never be able to get everybody to code exactly the same way. So if (like me) you&amp;#39;re a coder who feels the need to reformat code whenever you see it to make it fit in with anal standards, you could probably so with training yourself out of that habit. As long as you can read it, leave it be.&lt;/p&gt;

&lt;h2 id=&quot;delete-commented-out-code&quot;&gt;Delete commented out code&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re using a version control system (like &lt;a href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;) there really is no need to keep large blocks of commented-out or unused code. You should just delete it, to keep your codebase tidier. If you really need it again, you can just got and find it in the version control history. &lt;/p&gt;

&lt;h1 id=&quot;trade-offs&quot;&gt;Trade-offs&lt;/h1&gt;

&lt;p&gt;There will always be a trade-off between expresiveness and succinctness.&lt;/p&gt;

&lt;h2 id=&quot;depth-vs-encapsulation&quot;&gt;Depth vs. encapsulation&lt;/h2&gt;

&lt;p&gt;It is desirible to keep as flat a structure as possible in your objects, so that programmers don&amp;#39;t have to delve through parent class after parent class to find the relevant bit of code. But it is also important to keep code encapsulated in logical units.&lt;/p&gt;

&lt;p&gt;Both the goals are often achievable by doing &lt;a href=&quot;http://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;composition over inheritence&lt;/a&gt; using &lt;a href=&quot;http://en.wikipedia.org/wiki/Dependency_injection&quot;&gt;dependency injection&lt;/a&gt; or traits / multiple inheritence.&lt;/p&gt;

&lt;h2 id=&quot;special-syntax&quot;&gt;Special syntax&lt;/h2&gt;

&lt;p&gt;In many languages there are often slightly obscure constructs that can nonetheless save time. With many of these there is a readability vs. simplicity trade-off.&lt;/p&gt;

&lt;h3 id=&quot;ternary-operators-and-null-coalescing&quot;&gt;Ternary operators and null coalescing&lt;/h3&gt;

&lt;p&gt;Both C# and PHP have null coalescing operators:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;var userType = user.Type ?? defaultType; // C#
$userType = $user-&amp;gt;Type ?: $defaultType; // PHP
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And almost all languages support the &lt;a href=&quot;http://en.wikipedia.org/wiki/%3F:&quot;&gt;ternary operator&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defaultType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Both of these constructs are much more succinct than a full &lt;code&gt;if .. else&lt;/code&gt; construct, but they are less semantically clear, hence the trade-off. Personally, I think it&amp;#39;s fine to use the ternary operator in simple conditionals like this, but if it gets any more complicated then you should always use a full &lt;code&gt;if .. else&lt;/code&gt; statement.&lt;/p&gt;

&lt;h3 id=&quot;plugins-libraries&quot;&gt;Plugins / libraries&lt;/h3&gt;

&lt;p&gt;For example, in C#:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brownFish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fish&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fishes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colour&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;brown&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;brownFish&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Can be simplified with the Linq library:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brownFish&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fishes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fish&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colour&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;brown&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The latter is clearly simpler, and hopefully not too difficult to understand, but its does require:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Knowledge of the Linq library&lt;/li&gt;
&lt;li&gt;An understanding of lambda expressions work&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I think that in this case the Linq solution is so much simpler and quite expressive enough that it should definitely be preferred - and hopefully if another developer doesn&amp;#39;t know about Linq, it will be quite easy for them to pick up, and will expand their knowledge.&lt;/p&gt;

&lt;h2 id=&quot;single-use-variables&quot;&gt;Single-use variables&lt;/h2&gt;

&lt;p&gt;While the following variable is pointless:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayLength&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayIterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayIterator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arrayIterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are some cases where variables can be used to add useful semantic meaning:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;slideshowContainer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;main&amp;gt;.show&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;slideshowContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startSlideshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </entry>
    
    <entry>
        <title type="html">How to secure your site against the NSA and GCHQ</title>
        <link href="https://robinwinslow.co.uk/2013/11/07/how-to-secure-your-site-against-the-nsa/"/>
        <updated>2013-11-07T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/11/07/how-to-secure-your-site-against-the-nsa</id>
        <content type="html">&lt;p&gt;In the last couple of months I&amp;#39;ve had a number of discussions with people who were under the impression that &lt;em&gt;encryption has been cracked&lt;/em&gt; by the NSA.&lt;/p&gt;

&lt;p&gt;If you like, jump straight to &lt;a href=&quot;#what-you-can-do&quot;&gt;what you can do about it&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-story&quot;&gt;The story&lt;/h1&gt;

&lt;p&gt;The story started in September, in the Guardian:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NSA and GCHQ unlock encryption used to protect emails, banking and medical records&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;(&lt;a href=&quot;http://www.theguardian.com/world/2013/sep/05/nsa-gchq-encryption-codes-security&quot;&gt;Guardian - Revealed: how US and UK spy agencies defeat internet privacy and security&lt;/a&gt;, James Ball, Julian Borger and Glenn Greenwald, 5th September 2013)&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;This came up again today, because &lt;a href=&quot;http://en.wikipedia.org/wiki/Tim_berners_lee&quot;&gt;Sir Tim Berners-Lee&lt;/a&gt; made a statement:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In an interview with the Guardian, he expressed particular outrage that GCHQ and the NSA had weakened online security by cracking much of the online encryption on which hundreds of millions of users rely to guard data privacy.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;(&lt;a href=&quot;http://www.theguardian.com/world/2013/nov/06/tim-berners-lee-encryption-spy-agencies&quot;&gt;Guardian - Tim Berners-Lee condemns spy agencies as heads face MPs&lt;/a&gt;, Ed Pilkington, 7th November 2013)&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;And something very similar to this was stated in the Radio 4 news program I was listening to this morning.&lt;/p&gt;

&lt;h1 id=&quot;the-worry&quot;&gt;The worry&lt;/h1&gt;

&lt;p&gt;On the face of it this sounds like the NSA&amp;#39;s geniuses have reverse-engineered some core cryptographic principles - e.g. worked out how to quickly deduce prime factors from a public key (&lt;a href=&quot;http://www.informit.com/articles/article.aspx?p=102212&amp;seqNum=4&quot;&gt;read an explanation of RSA&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;This would be very serious. I was sceptical though, because I believe that if there were key vulnerabilities in public algorithms, the public would have found them long before the NSA. They don&amp;#39;t have a monopoly on good mathematicians. This is, after all, why open-source code and public algorithms are inherently more secure.&lt;/p&gt;

&lt;h1 id=&quot;the-truth&quot;&gt;The truth&lt;/h1&gt;

&lt;p&gt;Helpfully, Massachusetts Institute of Technology published an article 4 days later clarifying what the NSA had likely achieved:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;New details of the NSA’s capabilities suggest encryption can still be trusted. But more effort is needed to fix problems with how it is used.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;(&lt;a href=&quot;http://www.technologyreview.com/news/519171/nsa-leak-leaves-crypto-math-intact-but-highlights-known-workarounds/&quot;&gt;NSA Leak Leaves Crypto-Math Intact but Highlights Known Workarounds&lt;/a&gt;, Tom Simonite, 9th September 2013)&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;This shows that (still as far as we know) &lt;strong&gt;the NSA have done nothing unprecedented&lt;/strong&gt;. They have, however, gone to huge lengths to exploit every known vulnerability in security systems, regardless of legality. Mostly, these vulnerabilities are with the end-point systems, not the cryptography itself.&lt;/p&gt;

&lt;h2 id=&quot;what-the-nsa-and-gchq-have-done&quot;&gt;What the NSA and GCHQ have done&lt;/h2&gt;

&lt;p&gt;I&amp;#39;ve tried to list these in order of severity:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intercepted huge amounts of encrypted and unencrypted internet traffic&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.independent.co.uk/news/world/americas/nsa-hacked-google-and-yahoos-data-centre-links-snowden-documents-say-8913998.html&quot;&gt;Used network taps&lt;/a&gt; to get hold of Google and Yahoo&amp;#39;s (and probably others&amp;#39;) unencrypted private data as it&amp;#39;s transferred between their servers&lt;/li&gt;
&lt;li&gt;Acquired private-keys wherever they can, presumably through traditional hacking methods like brute-forcing passwords, social engineering, or inside contacts.&lt;/li&gt;
&lt;li&gt;Built back doors into certain commercial encryption software products (most notably, &lt;a href=&quot;http://www.wired.co.uk/news/archive/2013-07/12/microsoft-nsa-collusion&quot;&gt;Microsoft&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Used brute-force attacks to find weaker (1024-bit) RSA private keys&lt;/li&gt;
&lt;li&gt;Used court orders to force companies to give up personal information&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-word-about-rsa-brute-forcing&quot;&gt;A word about RSA brute-forcing&lt;/h2&gt;

&lt;p&gt;We have &lt;a href=&quot;http://stackoverflow.com/questions/589834/what-rsa-key-length-should-i-use-for-my-ssl-certificates&quot;&gt;known for a while&lt;/a&gt; that 1024-bit RSA keys could feasibly be brute-forced by anyone with enough resources - and many assumed that the U.S security agencies would almost certainly be doing it. So for the more paranoid among us, this should be no surprise.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“RSA 1024 is entirely too weak to be used anywhere with any confidence in its security” says Tom Ritter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, MIT also claim that these weaker keys are:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;used by most websites that offer secure SSL connections&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This surprises me, as I know that &lt;a href=&quot;http://uk.godaddy.com/&quot;&gt;GoDaddy&lt;/a&gt; at least won&amp;#39;t sell you a certificate for a key shorter than 2048-bit - and I would assume other certificate vendors would follow suit. But maybe this is fairly recent.&lt;/p&gt;

&lt;p&gt;However, even if &amp;quot;most websites&amp;quot; use RSA-1024, it &lt;em&gt;doesn&amp;#39;t mean&lt;/em&gt; that the NSA is decrypting all of this encrypted traffic, because it still requires a huge amount of resources (and time) to do, and the sheer number of such keys being used will also be huge. This means the NSA can &lt;em&gt;only&lt;/em&gt; be decrypting data from &lt;em&gt;specifically targeted&lt;/em&gt; sites. They won&amp;#39;t have decrypted all of it.&lt;/p&gt;

&lt;p&gt;&lt;span id=&quot;what-you-can-do&quot;&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-you-can-do&quot;&gt;What you can do&lt;/h1&gt;

&lt;p&gt;Now that we know this is going on, it only means that we should be more stringent about the security best-practices that already existed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use only public, open-source, tried and tested programs and algorithms&lt;/li&gt;
&lt;li&gt;Use 2048-bit or longer RSA keys&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://crypto.stackexchange.com/questions/8933/how-can-i-use-ssl-tls-with-perfect-forward-secrecy&quot;&gt;Configure secure servers to prefer &amp;quot;perfect forward secrecy&amp;quot; cyphers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Avoid the mainstream service providers (Google, Yahoo, Microsoft) where you can&lt;/li&gt;
&lt;li&gt;Secure your end-points: disable your root login; use secure passwords; know who has access to your private keys&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">BBC publishing misinformation on knife crime</title>
        <link href="https://robinwinslow.co.uk/2013/10/29/bbc-publishing-stupid-opinions/"/>
        <updated>2013-10-29T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/10/29/bbc-publishing-stupid-opinions</id>
        <content type="html">&lt;p&gt;On Saturday night, there was a big fight outside one of our night-clubs here in Nottingham, in which 3 people were stabbed.&lt;/p&gt;

&lt;h1 id=&quot;bbc-publishing-stupid-opinions&quot;&gt;BBC publishing stupid opinions&lt;/h1&gt;

&lt;p&gt;The BBC &lt;a href=&quot;http://www.bbc.co.uk/news/uk-england-nottinghamshire-24691928&quot;&gt;wrote an article&lt;/a&gt;, including a quote from the nightclub owner:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is not a localised problem, knife crime is becoming a huge national issue
Community sentences and conditional discharges do nothing to discourage criminals&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and the pull-quote:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tougher sentences needed&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I don&amp;#39;t understand why the BBC felt the need to give a platform to this particular schmuck. It is the responsibility of journalists, in my opinion, to stem the tide of sensationalism after events like this - after all, they should understand better than anyone the frequency with which stories like this occur.&lt;/p&gt;

&lt;h1 id=&quot;the-truth-about-knife-crime&quot;&gt;The truth about knife crime&lt;/h1&gt;

&lt;p&gt;According to knife crime &lt;a href=&quot;http://www.parliament.uk/briefing-papers/Sn04304&quot;&gt;statistics from parliament.uk&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The number of knife offences recorded (during the year to June 2012) was 9% lower than in the preceding year.&lt;/p&gt;

&lt;p&gt;NHS data suggests there were 4,490 people admitted to English hospitals in 2011/12 due to assault by a sharp object. The lowest level since 2002/03.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Similarly, &lt;a href=&quot;http://www.ons.gov.uk/ons/rel/crime-stats/crime-statistics/period-ending-march-2013/stb-crime--period-ending-march-2013.html#tab-Offences-involving-knives-and-sharp-instruments&quot;&gt;the Office for National Statistics has stats&lt;/a&gt; showing that total knife-related offences in the year to March 2013 is 26,336, down from 31,147 the previous year.&lt;/p&gt;

&lt;p&gt;So, Knife crime is not &amp;quot;becoming&amp;quot; any kind of problem. It&amp;#39;s an old problem, but it&amp;#39;s improving. So shut-up Simon Raine.&lt;/p&gt;

&lt;p&gt;Also, I don&amp;#39;t believe &amp;quot;tougher custodial sentences&amp;quot; have ever been the best solution. I don&amp;#39;t have time to find the evidence now, but I believe custodial sentences only harden criminals, and that rehabilitation is the way forward. And the police and the justice system are slowly realising this - which may be partly helping the knife crime stats. Don&amp;#39;t let stupid opinions like these derail that effort.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">How to use unix linkchecker to thoroughly check any site</title>
        <link href="https://robinwinslow.co.uk/2013/10/03/linkchecker/"/>
        <updated>2013-10-03T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/10/03/linkchecker</id>
        <content type="html">&lt;p&gt;If you want to a tool to crawl through your site looking for 404 or 500 errors, there are online tools (e.g. The W3C&amp;#39;s &lt;a href=&quot;http://validator.w3.org/checklink&quot;&gt;online link checker&lt;/a&gt;), browser plugins for &lt;a href=&quot;https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf?hl=en-GB&quot;&gt;Firefox&lt;/a&gt; and &lt;a href=&quot;https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf?hl=en-GB&quot;&gt;Chrome&lt;/a&gt;, or windows programs like &lt;a href=&quot;http://home.snafu.de/tilman/xenulink.html&quot;&gt;Xenu&amp;#39;s Link Sleuth&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;a-unix-link-checker&quot;&gt;A unix link checker&lt;/h1&gt;

&lt;p&gt;Today I found &lt;a href=&quot;http://wummel.github.io/linkchecker/&quot;&gt;linkchecker&lt;/a&gt; - available as a unix command-line program (although it also has a GUI or a web interface).&lt;/p&gt;

&lt;h1 id=&quot;install-the-command-line-tool&quot;&gt;Install the command-line tool&lt;/h1&gt;

&lt;p&gt;You can install the command-line tool simply on Ubuntu:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install linkchecker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;using-linkchecker&quot;&gt;Using linkchecker&lt;/h1&gt;

&lt;p&gt;Like any good command-line program, it has a &lt;a href=&quot;http://linkchecker.sourceforge.net/man1/linkchecker.1.html&quot;&gt;manual page&lt;/a&gt;, but it can be a bit daunting to read, so I give some shortcuts below.&lt;/p&gt;

&lt;p&gt;By default, &lt;code&gt;linkchecker&lt;/code&gt; will give you a lot of warnings. It&amp;#39;ll warn you for any links that result in 301s, as well as all 404s, timeouts, etc., as well as giving you status updates every second or so.&lt;/p&gt;

&lt;h2 id=&quot;robots-txt&quot;&gt;Robots.txt&lt;/h2&gt;

&lt;p&gt;linkchecker will not crawl a website that is disallowed by a robots.txt file, and there&amp;#39;s no way to override that. &lt;a href=&quot;http://wummel.github.io/linkchecker/faq.html&quot;&gt;The solution&lt;/a&gt; is to change the &lt;code&gt;robots.txt&lt;/code&gt; file to allow linkchecker through:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;User-Agent: *
Disallow: /
User-Agent: LinkChecker
Allow: /
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;redirecting-output&quot;&gt;Redirecting output&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;linkchecker&lt;/code&gt; seems to be expecting you to redirect its output to a file. If you do so, it will only put the actual warnings and errors in the file, and report status to the command-line:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;linkchecker http://example.com &amp;gt; siteerrors.log
35 URLs active,     0 URLs queued, 13873 URLs checked, runtime 1 hour, 51 minutes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;timeout&quot;&gt;Timeout&lt;/h2&gt;

&lt;p&gt;If you&amp;#39;re testing a development site, it&amp;#39;s quite likely it will be fairly slow to respond and &lt;code&gt;linkchecker&lt;/code&gt; may experience many timeouts, so you probably want to up that timeout time:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;linkchecker --timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 http://example.com &amp;gt; siteerrors.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;ignore-warnings&quot;&gt;Ignore warnings&lt;/h2&gt;

&lt;p&gt;I don&amp;#39;t know about you, but the sites I work on have loads of errors. I want to find 404s and 50*s before I worry about redirect warnings.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;linkchecker --timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 --no-warnings http://example.com &amp;gt; siteerrors.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;output-type&quot;&gt;Output type&lt;/h2&gt;

&lt;p&gt;The default &lt;code&gt;text&lt;/code&gt; output is fairly verbose. For easy readability, you probably want the logging to be in CSV format:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;linkchecker --timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 --no-warnings -ocsv http://example.com &amp;gt; siteerrors.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;other-options&quot;&gt;Other options&lt;/h2&gt;

&lt;p&gt;If you find and fix all your basic 404 and 50* errors, you might then want to turn warnings back on (remove &lt;code&gt;--no-warnings&lt;/code&gt;) and start using &lt;code&gt;--check-html&lt;/code&gt; and &lt;code&gt;--check-css&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;checking-websites-with-openid-2014-04-17-update&quot;&gt;Checking websites with OpenID (2014-04-17 update)&lt;/h2&gt;

&lt;p&gt;Today I had to use &lt;code&gt;linkchecker&lt;/code&gt; to check a site which required authentication with &lt;a href=&quot;https://login.ubuntu.com/&quot;&gt;Canonical&amp;#39;s OpenID system&lt;/a&gt;. To do this, &lt;a href=&quot;http://stackoverflow.com/questions/9119998/using-wget-in-conjunction-with-an-openid-login&quot;&gt;a StackOverflow answer&lt;/a&gt; helped me immensely.&lt;/p&gt;

&lt;p&gt;I first accessed the site as normal with &lt;a href=&quot;http://www.chromium.org/Home&quot;&gt;Chromium&lt;/a&gt;, opened &lt;a href=&quot;https://developers.google.com/chrome-developer-tools/docs/console&quot;&gt;the console window&lt;/a&gt; and dumped all the cookies that were set in that site:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cookie&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;__utmc=&quot;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;111111111&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;; pysid=1e53e0a04bf8e953c9156ea841e41157;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I then saved these cookies in &lt;code&gt;cookies.txt&lt;/code&gt; in a format that linkchecker will understand:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-&quot; data-lang=&quot;&quot;&gt;Host:example.com
Set-cookie: __utmc=&quot;111111111&quot;
Set-cookie: pysid=&quot;1e53e0a04bf8e953c9156ea841e41157&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And included it in my &lt;code&gt;linkchecker&lt;/code&gt; command with &lt;code&gt;--cookiefile&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;linkchecker --cookiefile&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;cookies.txt --timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;300 --no-warnings -ocsv http://example.com &amp;gt; siteerrors.csv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;use-it&quot;&gt;Use it!&lt;/h1&gt;

&lt;p&gt;If you work on a website of any significant size, there are almost certainly dozens of broken links and other errors. Link checkers will crawl through the website checking each link for errors.&lt;/p&gt;

&lt;p&gt;Link checking your website may seem obvious, but in my experience hardly any dev teams do it regularly.&lt;/p&gt;

&lt;p&gt;You might well want to use &lt;code&gt;linkchecker&lt;/code&gt; to do automated link checking! I haven&amp;#39;t implemented this yet, but I&amp;#39;ll try to let you know when I do.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Public analytics data for robinwinslow.co.uk</title>
        <link href="https://robinwinslow.co.uk/2013/06/28/public-analytics-data-for-this-site/"/>
        <updated>2013-06-28T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/06/28/public-analytics-data-for-this-site</id>
        <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.seethestats.com/&quot;&gt;SeeTheStats&lt;/a&gt; is a great free service for exposing your &lt;a href=&quot;http://www.google.co.uk/analytics/&quot;&gt;Google Analytics&lt;/a&gt; data (the only way to do Analytics) to the public.&lt;/p&gt;

&lt;p&gt;Here is some information about my site:&lt;/p&gt;

&lt;h1 id=&quot;how-many-people-visit-my-site&quot;&gt;How many people visit my site?&lt;/h1&gt;

&lt;iframe src=&quot;http://www.seethestats.com/stats/5172/Visitors_11494f89c_ifr.html&quot; style=&quot;width:700px;height:300px;border:none;&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;what-country-are-they-from&quot;&gt;What country are they from?&lt;/h1&gt;

&lt;iframe src=&quot;http://www.seethestats.com/stats/5172/VisitsByCountry_a55088a93_ifr.html&quot; style=&quot;width:700px;height:300px;border:none;&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;what-pages-are-they-looking-at&quot;&gt;What pages are they looking at?&lt;/h1&gt;

&lt;iframe src=&quot;http://www.seethestats.com/stats/5172/VisitsByPageTitle_0491a34cc_ifr.html&quot; style=&quot;width:700px;height:300px;border:none;&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;what-browsers-are-they-using&quot;&gt;What browsers are they using?&lt;/h1&gt;

&lt;iframe src=&quot;http://www.seethestats.com/stats/5172/VisitsByBrowser_d53cdbf9a_ifr.html&quot; style=&quot;width:700px;height:300px;border:none;&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;what-operating-systems-are-they-using&quot;&gt;What operating systems are they using?&lt;/h1&gt;

&lt;iframe src=&quot;http://www.seethestats.com/stats/5172/VisitsByOperatingSystem_b57aed2f0_ifr.html&quot; style=&quot;width:700px;height:300px;border:none;&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;how-big-are-their-screens&quot;&gt;How big are their screens?&lt;/h1&gt;

&lt;iframe src=&quot;http://www.seethestats.com/stats/5172/VisitsByScreenResolution_1ab7de45a_ifr.html&quot; style=&quot;width:700px;height:300px;border:none;&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;my-seethestats-page&quot;&gt;My SeeTheStats page&lt;/h1&gt;

&lt;p&gt;You can also see all these stats &lt;a href=&quot;http://www.seethestats.com/site/robinwinslow.co.uk&quot;&gt;over at SeeTheStats.com&lt;/a&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Loading fonts as Data URLs for performance</title>
        <link href="https://robinwinslow.co.uk/2013/06/20/loading-fonts-as-data-urls/"/>
        <updated>2013-06-20T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/06/20/loading-fonts-as-data-urls</id>
        <content type="html">&lt;p&gt;With the advent of &lt;a href=&quot;https://en.wikipedia.org/wiki/Web_typography#Web_fonts&quot;&gt;web fonts&lt;/a&gt; (e.g. from &lt;a href=&quot;https://www.google.com/fonts/&quot;&gt;Google Fonts&lt;/a&gt;), thankfully web designers are no longer tied to a limited set of &amp;quot;web safe&amp;quot; fonts.&lt;/p&gt;

&lt;h1 id=&quot;fonts-and-performance&quot;&gt;Fonts and performance&lt;/h1&gt;

&lt;p&gt;However, there is a potential performance hit with this. You will need to link your CSS files to the font files. The problem here isn&amp;#39;t so much the size of the font file (they are typically under 100 KB), it&amp;#39;s more that each new HTTP request that a page makes &lt;a href=&quot;http://developer.yahoo.com/performance/rules.html&quot;&gt;effects performance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, when loading web fonts externally you will sometimes see a flicker where the page loads initially with the default browser fonts, and then the new fonts are downloaded and applied afterwards. This flicker can look quite unprofessional.&lt;/p&gt;

&lt;h1 id=&quot;font-formats-and-ie8&quot;&gt;Font formats and IE8&lt;/h1&gt;

&lt;p&gt;If you want to support Internet Explorer 8 or older, you unfortunately need to include your fonts in two formats: &lt;a href=&quot;https://en.wikipedia.org/wiki/Woff&quot;&gt;WOFF&lt;/a&gt; and &lt;a href=&quot;https://en.wikipedia.org/wiki/Embedded_OpenType&quot;&gt;EOT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, if you&amp;#39;re willing to drop IE8 support (and &lt;a href=&quot;/2013/02/28/time-to-say-goodbye-to-ie8/&quot;&gt;reap the benefits&lt;/a&gt;), or to simply serve the browser default font to IE8, then you can provide your fonts in WOFF only, which is supported by &lt;a href=&quot;http://caniuse.com/#search=woff&quot;&gt;all other relevant browsers&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;data-urls&quot;&gt;Data URLs&lt;/h1&gt;

&lt;p&gt;So &lt;a href=&quot;http://dataurl.net/#about&quot;&gt;Data URLs&lt;/a&gt;, if you haven&amp;#39;t heard of them, are a way of encoding binary data as a valid URL string. This means the data can be included directly inside HTML or CSS files. They are fantastically easy to create by simply dragging your binary file into the &lt;a href=&quot;http://dataurl.net/#dataurlmaker&quot;&gt;Data URL Creator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Data URLs are likely to be a bit larger than the binary file would have been. In my experience they tend to be about 20% larger. So the larger the file you&amp;#39;re dealing with the less practical it becomes to encode the file as a URL. However, for sub-100k web fonts this difference is not so important.&lt;/p&gt;

&lt;p&gt;So using Data URLs, you can include your font directly in your CSS like so:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/* http://www.google.com/webfonts/specimen/Lato */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@font-face&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&#39;Lato light&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;normal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;Lato Light&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(&#39;data:application/x-font-woff;base64,d09GRg...BQAAAAB&#39;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&#39;woff&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(For example, &lt;a href=&quot;https://github.com/nottrobin/robinwinslow.uk/blob/master/_assets/stylesheets/global.scss#L345&quot;&gt;here&amp;#39;s what I use for this very site&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This will now mean that your web pages will only have to download one CSS file, rather than a CSS file and a bunch of font files, which will help performance. Personally I think it&amp;#39;s also neat not to have to create a special directory for font files. Keeping it all in one place (CSS) just seems nice and neat to me.&lt;/p&gt;

&lt;h1 id=&quot;a-word-about-caching&quot;&gt;A word about caching&lt;/h1&gt;

&lt;p&gt;Whether the above suggestion is actually a good idea will depend on how often your CSS changes. Hopefully you&amp;#39;ll be merging your CSS files into one file already to reduce HTTP requests. This of course means that whenever that merged CSS file changes, your users will have to download the whole file again to see your changes.&lt;/p&gt;

&lt;p&gt;If your fonts were downloaded as separate files, rather than being included in your CSS, then the fonts may well be cached even if the CSS has changed. However, if you include your fonts inside your CSS files as suggested above, this will mean that whenever your CSS changes a much larger CSS file will have to be downloaded each time. Including your fonts inside your CSS is likely to double the size of your CSS file.&lt;/p&gt;

&lt;p&gt;This is a complex decision, but to give you some rough advice I&amp;#39;d say - if you CSS changes more than a couple of times a month then keep your fonts as separate files. If it&amp;#39;s less often (as it is with this site) then it&amp;#39;s probably worth including them inside the CSS as Data URLs.&lt;/p&gt;

&lt;p&gt;If you have a different opinion on this, please let me know in the comments.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Social morals - a statement of values</title>
        <link href="https://robinwinslow.co.uk/2013/06/17/social-morals-a-statement-of-values/"/>
        <updated>2013-06-17T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/06/17/social-morals-a-statement-of-values</id>
        <content type="html">&lt;p&gt;I am always thinking about good general rules for making the world a better place, but it&amp;#39;s extremely difficult to succinctly communicate them to anyone.&lt;/p&gt;

&lt;p&gt;This is the story of how my friends and I created and agreed on a &lt;a href=&quot;#statement&quot;&gt;statement of values&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;the-foundation&quot;&gt;The foundation&lt;/h1&gt;

&lt;p&gt;A couple of months ago, I was in an IRC chat room with some friends of mine (do people actually still use IRC? tell me in the comments), and &lt;a href=&quot;https://twitter.com/0atman&quot;&gt;@0atman&lt;/a&gt; aired an idea for a charitable project. We all thought it was a good one, and long a discussion ensued about the best way to run the project.&lt;/p&gt;

&lt;p&gt;We all felt that it should be run democratically to some extent - that is, largely owned by its members - but we were worried about the project being hijacked and becoming something that none of us wanted it to be.&lt;/p&gt;

&lt;p&gt;A potential solution, we felt, was to first create a foundation with exclusive membership and a solid stated set of values. That way, the project could be started by the foundation, but not inherently attached to it, meaning that if the project took a different direction, the foundation would remain intact. This would allow us to either create a fork of the project, bringing it back in line with our values, or start a completely new one, while allowing the existing project to continue in its new direction with our blessing.&lt;/p&gt;

&lt;p&gt;Thus was formed the &lt;a href=&quot;http://blackgatefoundation.org/&quot;&gt;Blackgate Foundation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;(Nothing has come of the project idea yet. I hope it may in the future.)&lt;/p&gt;

&lt;h1 id=&quot;arguments-over-values&quot;&gt;Arguments over values&lt;/h1&gt;

&lt;p&gt;Since we formed the foundation specifically to be a solid moral centre for our future projects, &lt;strong&gt;the values of the foundation were paramount&lt;/strong&gt;, so we started debating them in ernest.&lt;/p&gt;

&lt;p&gt;Politically and morally we have a lot of things in common, but it was surprising how much we found to argue about. We disagreed about the necessity for punishment, whether there&amp;#39;s ever a case to go to war, whether &lt;a href=&quot;http://en.wikipedia.org/wiki/Utilitarianism&quot;&gt;utilitarianism&lt;/a&gt; was a term we could or should associate ourselves with, whether we agreed with the values of &lt;a href=&quot;http://en.wikipedia.org/wiki/Humanism&quot;&gt;humanism&lt;/a&gt;, our opinions on religion.&lt;/p&gt;

&lt;p&gt;We discussed it for days, on IRC and in comments and edits on a &lt;a href=&quot;http://en.wikipedia.org/wiki/Google_document&quot;&gt;Google Document&lt;/a&gt; (I don&amp;#39;t want to advertise Google particularly, but Google Documents really are an amazingly effective way to collaborate with people). It got kinda heated at times. But eventually we came out with a largely agreed upon statement of values, and I think our individual values all changed a little along the way.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;statement&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;the-statement-of-values&quot;&gt;The statement of values&lt;/h1&gt;

&lt;p&gt;I am proud of what we produced, and I had a lot of fun doing it. I think it sums up my values rather well. I think it&amp;#39;s firm and clear without being offensive or inflamatory. I&amp;#39;d love to know what you think of it - please let me know in the comments.&lt;/p&gt;

&lt;p&gt;It can be seen &lt;a href=&quot;http://blackgatefoundation.org/post/51405181240/about&quot;&gt;on the blackgate foundation website&lt;/a&gt; or &lt;a href=&quot;https://github.com/blackgate-foundation/charter/blob/master/statement-of-values.md&quot;&gt;in our GitHub repositority&lt;/a&gt;, but I&amp;#39;m also reproducing it here in its current form (we may decide to change it in the future):&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id=&quot;statement-of-values&quot;&gt;Statement of values&lt;/h1&gt;

&lt;p&gt;We, the members of the Blackgate Foundation, value:&lt;/p&gt;

&lt;h2 id=&quot;equality&quot;&gt;Equality&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Humanity should strive to treat and provide for all people equally regardless of appearance, sexuality, gender, beliefs, ability or actions.&lt;/li&gt;
&lt;li&gt;All people should be equally represented and no person fundamentally deserves to be better off than any other.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;science-openness&quot;&gt;Science &amp;amp; openness&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The pursuit of knowledge is a human instinct and a universal force for good.&lt;/li&gt;
&lt;li&gt;There is value in sceptical, evidence-based and objective reasoning in the persuit of knowledge.&lt;/li&gt;
&lt;li&gt;Knowledge should be made available to all of humanity. We should strive to build on existing work rather than doing work from scratch.&lt;/li&gt;
&lt;li&gt;There is value in open processes and collective decision making - many eyes guard against injustices and inefficiencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;diversity&quot;&gt;Diversity&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Diversity is important in all things. Many opinions and diverse practices prevent stagnation, create risilience through redundancy and speed evolution and learning.&lt;/li&gt;
&lt;li&gt;Centres of control should be diverse and small and subservient and answerable to all over whom they hold influence. Any decisions by such centres should be evidence based and open to discussion.&lt;/li&gt;
&lt;li&gt;The interests of humanity should always come before those of any individual or group, particularly applies to corporate protectionism and nationalism.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pacifism&quot;&gt;Pacifism&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Violence in all its forms is divisive and inflammatory and therefore always undesirable.&lt;/li&gt;
&lt;li&gt;We renounce the glorification of violence and the use of violence to solve disputes.&lt;/li&gt;
&lt;li&gt;It is in the interest of humanity to seek to understand and help those who act violently.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;evidence-based-morality&quot;&gt;Evidence-based morality&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Morality is not absolute. Moral guidelines should be formed through evidence-based reasoning.&lt;/li&gt;
&lt;li&gt;There exist solid evidence-based arguments for the most universally accepted moral tenets.&lt;/li&gt;
&lt;li&gt;&amp;quot;Bad&amp;quot; and &amp;quot;evil&amp;quot; are counter-productive concepts. Humanity should strive to avoid ultimately judging any person as either.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sustainability&quot;&gt;Sustainability&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;All human activity should continually strive to be sustainable. Notable examples are human impact on the environment and the global economy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;try-it&quot;&gt;Try it!&lt;/h1&gt;

&lt;p&gt;Why don&amp;#39;t you try writing down your morals and values in a similar form? Or do it with some friends? I really enjoyed it and couldn&amp;#39;t recommend it more.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Blog like a pro with static site generators - it&#39;s easier than you think</title>
        <link href="https://robinwinslow.co.uk/2013/06/15/static-site-generators/"/>
        <updated>2013-06-15T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/06/15/static-site-generators</id>
        <content type="html">&lt;p&gt;Static site generators (like &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; and &lt;a href=&quot;http://ringce.com/hyde&quot;&gt;Hyde&lt;/a&gt;) offer a much simpler and more transparent way to create a website. There&amp;#39;s a small learning curve, but it&amp;#39;s totally worth it. Especially if you&amp;#39;re a developer already.&lt;/p&gt;

&lt;h1 id=&quot;what-is-a-static-site-generator&quot;&gt;What is a static site generator?&lt;/h1&gt;

&lt;p&gt;A piece of software that can read a set of files in a particular format and convert them into static files (e.g. HTML &amp;amp;c.) that can then be served directly as a website.&lt;/p&gt;

&lt;p&gt;Note that just because a site is static on the server-side doesn&amp;#39;t mean it can&amp;#39;t be dynamic on the client-side. You can easily include comments and other dynamic functionality through JavaScript plugins.&lt;/p&gt;

&lt;p&gt;The workflow goes something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;sublime-text _posts/2013-05-30-why-i-love-the-internet.md &lt;span class=&quot;c&quot;&gt;# create a new blog post&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;jekyll --server &lt;span class=&quot;c&quot;&gt;# build the static site into my _site/2013/05/30/why-i-love-the-internet.html directory and run a test server&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# check the site and my new blog post look okay&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git add . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -m &lt;span class=&quot;s1&quot;&gt;&#39;new post: why i love the internet&#39;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# save it in version control&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;git push heroku &lt;span class=&quot;c&quot;&gt;# release the change to my live site (I use heroku)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;why-bother&quot;&gt;Why bother?&lt;/h1&gt;

&lt;p&gt;Personally I think static sites make managing websites really fun.&lt;/p&gt;

&lt;p&gt;For the right kind of project, static sites can make it so much simpler to manage a site. They remove a whole bunch of concerns that you used to have to worry about (e.g. with CMSs like &lt;a href=&quot;http://wordpress.org/&quot;&gt;Wordpress&lt;/a&gt; or &lt;a href=&quot;http://drupal.org/&quot;&gt;Drupal&lt;/a&gt;, or frameworks like &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt;, &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt; or &lt;a href=&quot;http://symfony.com/&quot;&gt;Symfony&lt;/a&gt;):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;caching&lt;/strong&gt; - You can forget about server-side caching, since you&amp;#39;re already serving static files&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;databases&lt;/strong&gt; - You don&amp;#39;t need a database - all the data is stored as files&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;version control&lt;/strong&gt; - You easily keep your whole site including document changes in version control&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;easy to start&lt;/strong&gt; - Hardly have to write any code to get started.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;easy to maintain&lt;/strong&gt; - Tweaking your site is more transparent and direct - you can easily view and edit the static files directly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;which-sites-make-sense&quot;&gt;Which sites make sense?&lt;/h1&gt;

&lt;p&gt;Any site that needs to do anything complex on the server-side work will &lt;em&gt;not&lt;/em&gt; be appropriate. However, any site which is basically just &lt;strong&gt;a collection of static information&lt;/strong&gt; - like a &lt;strong&gt;blog&lt;/strong&gt;, a &lt;strong&gt;brochure site&lt;/strong&gt;, or even a &lt;strong&gt;news or magazine site&lt;/strong&gt; - could work as a static site.&lt;/p&gt;

&lt;p&gt;The other important thing is that everyone who wants to be able to edit the site needs to learn how to do it.&lt;/p&gt;

&lt;p&gt;This needn&amp;#39;t necessarily exclude anyone. Many static site generators use &lt;a href=&quot;http://daringfireball.net/projects/markdown/basics&quot;&gt;Markdown document syntax&lt;/a&gt;, which anyone can understand and learn. &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt; even has a lets you edit files directly online, which anyone with permission can use to edit the website files. Editors will have to understand the concept of version control, and understand how the site structure works, but this shared understanding will probably aid rather than hinder your project&amp;#39;s progression.&lt;/p&gt;

&lt;p&gt;In any case, if the only people who edit the site directly are developers then using a static site generator should come absolutely naturally.&lt;/p&gt;

&lt;h1 id=&quot;how&quot;&gt;How?&lt;/h1&gt;

&lt;p&gt;There are many static site generators out there written in many different languages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ruby: &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; | &lt;a href=&quot;http://middlemanapp.com/&quot;&gt;middleman&lt;/a&gt; | &lt;a href=&quot;http://nanoc.ws/&quot;&gt;nanoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;python: &lt;a href=&quot;http://ringce.com/hyde&quot;&gt;hyde&lt;/a&gt; | &lt;a href=&quot;http://getpelican.com/&quot;&gt;pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;php: &lt;a href=&quot;http://www.phrozn.info/en/&quot;&gt;phrozen&lt;/a&gt; | &lt;a href=&quot;https://sculpin.io/&quot;&gt;sculpin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personally I use &lt;a href=&quot;https://github.com/nottrobin/robinwinslow.uk&quot;&gt;jekyll for my website&lt;/a&gt;. Originally this was because it is &lt;a href=&quot;https://help.github.com/articles/using-jekyll-with-pages&quot;&gt;natively supported in Github Pages&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m not going to go into how to use a &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; in depth in this post, but I&amp;#39;ll try to write another couple of posts soon:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How to set up a basic static site with Jekyll on Github Pages&lt;/li&gt;
&lt;li&gt;How to host a Jekyll-based site on Heroku&lt;/li&gt;
&lt;/ol&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Why I love the internet</title>
        <link href="https://robinwinslow.co.uk/2013/05/30/why-i-love-the-internet/"/>
        <updated>2013-05-30T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/05/30/why-i-love-the-internet</id>
        <content type="html">&lt;p&gt;I have many interests, but I think there are two common thread running through them all:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I care deeply, fundamentally about fairness and equality&lt;/li&gt;
&lt;li&gt;I am very interested in complex systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&amp;quot;Complex systems&amp;quot; sounds extremely abstract, but I think it really is the core of my academic interest. I like mapping systems in my head, seeing the nodes; seeing the ways they interact with each other. I like working out how to create elegant systems and optimal systemic solutions for solving problems.&lt;/p&gt;

&lt;p&gt;This leads me in two directions:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I love technology. Technology, along with all the problems it&amp;#39;s trying to solve, creates and makes use of myriad systems and systemic structures. I love trying to understanding these systems.&lt;/li&gt;
&lt;li&gt;I love social systems and social science. People are complex, and there are extremely subtle and nuanced rules governing how they think interact in a social systems. I love pondering people and psychology.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Running through all the mini projects and fancies that flow from my interest in systems is my deep desire for global fairness and equality. I believe that technology has the capacity to be a great equaliser. Most people in the world don&amp;#39;t really have a voice to influence the global power-structures, but hopefully the internet and communications technology can give them that voice.&lt;/p&gt;

&lt;p&gt;In a nutshell, this is why &lt;em&gt;I love the internet&lt;/em&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Chrome v25 breaks layout of date field</title>
        <link href="https://robinwinslow.co.uk/2013/03/05/chrome-v25-breaks-layout-of-date-field/"/>
        <updated>2013-03-05T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/03/05/chrome-v25-breaks-layout-of-date-field</id>
        <content type="html">&lt;p&gt;Chrome version 25 appears to have made a pretty serious change to how the &lt;a href=&quot;http://www.w3.org/TR/html-markup/input.date.html&quot;&gt;HTML5 input date type&lt;/a&gt; is rendered.&lt;/p&gt;

&lt;p&gt;Now the &lt;code&gt;date&lt;/code&gt; type defaults to &lt;code&gt;display: -webkit-inline-flex&lt;/code&gt;, and (this is the bad bit) if you use &lt;code&gt;display: block&lt;/code&gt; the layout breaks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;//i.imgur.com/K1HqV3L.png&quot; alt=&quot;date field layout broken&quot;&gt;&lt;/p&gt;

&lt;p&gt;(&lt;a href=&quot;http://jsfiddle.net/nottrobin/zjHbv/2/&quot;&gt;try it yourself&lt;/a&gt;)&lt;/p&gt;

&lt;h1 id=&quot;why-is-this-bad&quot;&gt;Why is this bad?&lt;/h1&gt;

&lt;p&gt;We use the date type on &lt;a href=&quot;http://arena-blinds.com&quot;&gt;arena blinds&lt;/a&gt;,
and to have more control over the layout of the input fields, they are all set to &lt;code&gt;display: block&lt;/code&gt;.
I think this is, if not &amp;quot;best&amp;quot;, at least a pretty common practice.&lt;/p&gt;

&lt;p&gt;So one day we realised our date fields looked broken in Chrome, and it was because of this issue. So my boss said:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If we can&amp;#39;t rely on the date control not to break, we have to abandon the HTML5 date field altogether&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And that&amp;#39;s entirely fair reasoning.&lt;/p&gt;

&lt;h1 id=&quot;cognitive-dissonance&quot;&gt;Cognitive dissonance&lt;/h1&gt;

&lt;p&gt;My boss&amp;#39;s perfectly reasonable conclusion goes against everything progressive that I&amp;#39;ve been trying to instil in my team.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Progressive_enhancement&quot;&gt;Progressive enhancement&lt;/a&gt; is accepted best practice nowadays - to
use the built-in functionality when it&amp;#39;s there, with fall-backs for browsers that don&amp;#39;t support it. E.g.:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Modernizr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inputtypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;date&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;input[type=date]&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;datepicker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is a solid approach I strongly believe in.
But if Chrome are going to implement breaking changes like this, I don&amp;#39;t know what to think any more.&lt;/p&gt;

&lt;p&gt;Chrome, you&amp;#39;ve ruined my day.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">An awesome in-site user feedback tool - with Github integration</title>
        <link href="https://robinwinslow.co.uk/2013/03/02/awesome-in-site-user-feedback/"/>
        <updated>2013-03-02T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/03/02/awesome-in-site-user-feedback</id>
        <content type="html">&lt;p&gt;I was just entering an expense on &lt;a href=&quot;http://splitwise.com/&quot;&gt;Splitwise&lt;/a&gt;
and I noticed a subtle little widget in the bottom of the screen saying &amp;quot;Feedback&amp;quot;.
&amp;quot;Aha!&amp;quot; thinks me. &amp;quot;This is exactly the sort of thing all websites should do&amp;quot;.
So I click it and find out it&amp;#39;s made by &lt;a href=&quot;https://Uservoice.com/&quot;&gt;Uservoice&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Websites need user-feedback. They need it all the time.
So we need to be constantly offering users the opportunity to tell us what they think,
but also not annoy users by bugging them all the time,
and somehow try to avoid getting 50 of the same issue being submitted.&lt;/p&gt;

&lt;h1 id=&quot;well-done-uservoice&quot;&gt;Well done Uservoice&lt;/h1&gt;

&lt;p&gt;I think Uservoice got this exactly right.
You get a subtle link appear on the side of the site saying one word - &amp;quot;feedback&amp;quot;.
You probably noticed it, instantly know what it is there for, and it&amp;#39;s easy to ignore if you want.&lt;/p&gt;

&lt;p&gt;When you click it, you get given a list of current suggestions on the left that you can vote on,
or you can submit your own suggestion on the right. It&amp;#39;s perfect.&lt;/p&gt;

&lt;p&gt;The feedback link is totally customisable, and easy to include in your site with a simple Javascript snippet.&lt;/p&gt;

&lt;p&gt;I use the service on this very site (look to the right).
Please click it to see Uservoice in action and please leave me some feedback :).&lt;/p&gt;

&lt;h1 id=&quot;the-missing-link-github-issues-integration&quot;&gt;The missing link - Github Issues integration&lt;/h1&gt;

&lt;p&gt;Immediately I thought &amp;quot;where will these suggestions be stored?&amp;quot;
because I was already managing &lt;a href=&quot;https://github.com/nottrobin/robinwinslow.uk/issues&quot;&gt;my own list of ideas&lt;/a&gt; in
&lt;a href=&quot;https://github.com/blog/831-issues-2-0-the-next-generation&quot;&gt;Github Issues&lt;/a&gt; (augmented with &lt;a href=&quot;http://huboard.com/&quot;&gt;Huboard&lt;/a&gt;)
and I didn&amp;#39;t like the idea of having to maintain two lists, or manually copy issues between the two.&lt;/p&gt;

&lt;p&gt;Someone had &lt;a href=&quot;http://feedback.Uservoice.com/forums/1-general-feedback/suggestions/2967034-integrate-with-github-s-issue-tracking&quot;&gt;already suggested integration&lt;/a&gt;
to Uservoice, but it turns out there&amp;#39;s already a slick &lt;a href=&quot;https://zapier.com/zapbook/github/Uservoice/&quot;&gt;solution with Zapier&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://zapier.com/&quot;&gt;Zapier&lt;/a&gt; is an integration service - for linking various different APIs.
And they already have built-in support for linking Uservoice to Github Issues.&lt;/p&gt;

&lt;h1 id=&quot;but-how-much-does-it-cost&quot;&gt;But how much does it cost?&lt;/h1&gt;

&lt;p&gt;For this website I certainly can&amp;#39;t afford to pay for either service.
So it&amp;#39;s a good thing that both &lt;a href=&quot;https://zapier.com/app/settings/plans&quot;&gt;Zapier&lt;/a&gt; and &lt;a href=&quot;https://www.uservoice.com/plans/&quot;&gt;Uservoice&lt;/a&gt;
follow a  similar model to other modern digital projects like &lt;a href=&quot;http://heroku.com/&quot;&gt;Heroku&lt;/a&gt;.
That is - it&amp;#39;s &lt;strong&gt;free for light or personal use&lt;/strong&gt;, but when you want to scale it you have to start paying.&lt;/p&gt;

&lt;p&gt;Which suits me just fine.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">What you can do if you stop supporting IE8</title>
        <link href="https://robinwinslow.co.uk/2013/02/28/time-to-say-goodbye-to-ie8/"/>
        <updated>2013-02-28T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/02/28/time-to-say-goodbye-to-ie8</id>
        <content type="html">&lt;p&gt;Try visiting this site in IE8. Go on, I dare ya. Alright, I&amp;#39;ll tell you - it&amp;#39;s an ugly white page with black writing.
Oh except for a banner at the top telling you to upgrade your browser.&lt;/p&gt;

&lt;p&gt;In recent years we have said goodbye to widespread support for first &lt;a href=&quot;http://www.ie6countdown.com/&quot;&gt;IE6&lt;/a&gt; and then &lt;a href=&quot;http://theie7countdown.com/&quot;&gt;IE7&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Google &lt;a href=&quot;http://www.computerworld.com/s/article/9231316/Google_to_drop_support_for_IE8_on_Nov._15&quot;&gt;dropped support for IE8&lt;/a&gt; back in November,
&lt;a href=&quot;http://37signals.com/svn/posts/3097-developing-for-old-browsers-is-almost-a-thing-of-the-past&quot;&gt;37signals also&lt;/a&gt;.
There are a &lt;a href=&quot;http://www.smashingmagazine.com/2011/11/03/%E2%80%9Cbut-the-client-wants-ie-6-support%E2%80%9D/&quot;&gt;plethora&lt;/a&gt; of 
&lt;a href=&quot;http://www.rickwhittington.com/blog/should-my-website-support-internet-explorer-7/&quot;&gt;articles&lt;/a&gt; out
&lt;a href=&quot;http://j.eremy.net/are-you-still-supporting-ie7/&quot;&gt;there&lt;/a&gt; imploring people to drop support for Internet Explorer.&lt;/p&gt;

&lt;h1 id=&quot;ie8-usage&quot;&gt;IE8 usage&lt;/h1&gt;

&lt;p&gt;According the &lt;a href=&quot;http://theie8countdown.com/&quot;&gt;theie8countdown.com&lt;/a&gt;, global usage is at 24%. On this blog, it&amp;#39;s at 1.5%,
and on my company&amp;#39;s website, &lt;a href=&quot;http://www.arena-blinds.com&quot;&gt;Arena Blinds&lt;/a&gt;, (used by much less tech-savvy people) it&amp;#39;s at 15%.&lt;/p&gt;

&lt;p&gt;So if you were bold (like this site), you could probably drop support completely and effect less than 1/5 of your visitors.
And those visitors would quickly upgrade their browsers.&lt;/p&gt;

&lt;h1 id=&quot;advantages&quot;&gt;Advantages&lt;/h1&gt;

&lt;p&gt;Dropping comes with significant advantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;a href=&quot;http://kimblim.dk/css-tests/selectors/&quot;&gt;practically all of the CSS selectors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use HTML5 semantic elements without a &lt;a href=&quot;https://code.google.com/p/html5shim/&quot;&gt;shim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;http://people.mozilla.com/%7Eprouget/ie9/&quot;&gt;much more of HTML5&lt;/a&gt; confidently&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&quot;http://caniuse.com/#search=woff&quot;&gt;WOFF format&lt;/a&gt; exclusively - making it easier to &lt;a href=&quot;/2013/06/20/loading-fonts-as-data-urls/&quot;&gt;use Data URLs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These four points will effect your debugging time for front-end development dramatically.&lt;/p&gt;

&lt;p&gt;Consider it.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Optimal font-size, line-height and line-length</title>
        <link href="https://robinwinslow.co.uk/2013/02/18/optimal-font-size/"/>
        <updated>2013-02-18T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2013/02/18/optimal-font-size</id>
        <content type="html">&lt;h1 id=&quot;font-size&quot;&gt;Font-size&lt;/h1&gt;

&lt;p&gt;I googled &amp;quot;Optimal font-size&amp;quot;, read first
&lt;a href=&quot;http://www.smashingmagazine.com/2011/10/07/16-pixels-body-copy-anything-less-costly-mistake/&quot;&gt;16 pixels&lt;/a&gt;
then &lt;a href=&quot;http://alistapart.com/article/dao&quot;&gt;a dao of web design&lt;/a&gt; and came to the conclusion that
the optimal font-size is &lt;em&gt;not to specify one&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;line-height&quot;&gt;Line-height&lt;/h1&gt;

&lt;p&gt;As for optimal line-height - around
&lt;a href=&quot;http://www.smashingmagazine.com/2009/08/20/typographic-design-survey-best-practices-from-the-best-blogs/&quot;&gt;1.5em is common&lt;/a&gt;,
but &lt;a href=&quot;http://www.pearsonified.com/2011/12/golden-ratio-typography.php&quot;&gt;The Golden Ratio&lt;/a&gt; seems a little
neater. So that&amp;#39;s a good standard.&lt;/p&gt;

&lt;h1 id=&quot;line-length&quot;&gt;Line-length&lt;/h1&gt;

&lt;p&gt;As for line length - &lt;a href=&quot;http://www.pearsonified.com/2011/12/golden-ratio-typography.php&quot;&gt;golden ratio typography&lt;/a&gt;
claims that it should be proportional to line-height, which makes sense, but the equation they suggest
just doesn&amp;#39;t make any sense.
A &lt;a href=&quot;http://www.smashingmagazine.com/2009/08/20/typographic-design-survey-best-practices-from-the-best-blogs/&quot;&gt;Smashing Magazine article&lt;/a&gt;
suggests that around 65 characters per line is ideal, but that most people go for more like 75.
&lt;code&gt;65em / 1.618 (golden) = 40.173&lt;/code&gt; so I&amp;#39;m going to suggest that &lt;strong&gt;41 times line height&lt;/strong&gt;.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">OSS projects I&#39;d love to get involved with...</title>
        <link href="https://robinwinslow.co.uk/2012/12/13/oss-projects-i-d-love-to-get-involved-with/"/>
        <updated>2012-12-13T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2012/12/13/oss-projects-i-d-love-to-get-involved-with</id>
        <content type="html">&lt;p&gt;... if I had the time (this list will grow)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://bourbon.io/&quot;&gt;Bourbon&lt;/a&gt; (and &lt;a href=&quot;http://neat.bourbon.io/&quot;&gt;neat&lt;/a&gt;) - SASS libraries&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://backbonejs.org/&quot;&gt;Backbone.js&lt;/a&gt; - Organised JavaScript&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://brackets.io/&quot;&gt;Brackets&lt;/a&gt; - Simple HTML/JS/CSS editor, written in HTML/JS/CSS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.mozilla.org/en-US/firefoxos/&quot;&gt;Firefox OS&lt;/a&gt; - Web focused mobile OS (this is a bit far fetched...) &lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Continuous Improvement and TDD/BDD</title>
        <link href="https://robinwinslow.co.uk/2012/12/07/continuous-improvement-and-tdd-bdd/"/>
        <updated>2012-12-07T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2012/12/07/continuous-improvement-and-tdd-bdd</id>
        <content type="html">&lt;p&gt;So, having just accompanied my blog on
&lt;a href=&quot;/2012/12/07/a-blogs-existential-quest/&quot;&gt;its existential quest&lt;/a&gt;
I have decided to start writing down rambling thoughts just for the process of solidifying them in
my mind - and not worry about their quality as prose.&lt;/p&gt;

&lt;p&gt;Further to that, I have something I want to solidify.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been working in the offices of &lt;a href=&quot;http://www.sessiondigital.com/&quot;&gt;Session Digital&lt;/a&gt; today. Every
Friday, &lt;a href=&quot;https://twitter.com/_md&quot;&gt;Marcello&lt;/a&gt; runs a &amp;quot;code workshop&amp;quot; for an hour at the end of the
day, which I chose to attend. The purpose of this workshop is to encourage
&lt;a href=&quot;http://en.wikipedia.org/wiki/Continual_improvement_process&quot;&gt;Continuous Improvement&lt;/a&gt; techniques to
help coders improve the code they write.&lt;/p&gt;

&lt;p&gt;His philosophy for this is based around the Japanese word &lt;a href=&quot;http://en.wikipedia.org/wiki/Kata&quot;&gt;Kata&lt;/a&gt;,
which means &amp;quot;form&amp;quot; and as far as I can tell from the very brief introduction I was given is about
building good technique as habit through repetition, so you don&amp;#39;t even need to think about it.&lt;/p&gt;

&lt;p&gt;The repetition in question is repetition of performing coding while conforming to the rules of
&lt;a href=&quot;http://en.wikipedia.org/wiki/Test-driven_development&quot;&gt;Test-&lt;/a&gt;
(or &lt;a href=&quot;http://en.wikipedia.org/wiki/Behavior-driven_development&quot;&gt;Behaviour-&lt;/a&gt;) Driven Development and of
&lt;a href=&quot;http://en.wikipedia.org/wiki/Extreme_programming_practices#Simple_design&quot;&gt;Simple Design&lt;/a&gt;, while also
working in pairs. We are given a programming problem to solve, and then asked to solve it over and
over again, trying to refine our &amp;quot;Form/Kata&amp;quot;.&lt;/p&gt;

&lt;p&gt;Rules of TDD (if these don&amp;#39;t make much sense, go read more about TDD):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You may not write code except to make a failing test pass&lt;/li&gt;
&lt;li&gt;You may only write a test until you have a failing state&lt;/li&gt;
&lt;li&gt;You may only write code until you have made the test pass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rules of Simple Design:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All test must pass before you may refactor/simplify code&lt;/li&gt;
&lt;li&gt;There should be no code duplication&lt;/li&gt;
&lt;li&gt;Code should be as expressive as possible&lt;/li&gt;
&lt;li&gt;Code should be as simple as possible (eliminate complexity)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That is all for now.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">A blog&#39;s existential quest</title>
        <link href="https://robinwinslow.co.uk/2012/12/07/a-blogs-existential-quest/"/>
        <updated>2012-12-07T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2012/12/07/a-blogs-existential-quest</id>
        <content type="html">&lt;p&gt;I&amp;#39;m not entirely sure why I have a blog. Not to mention that it&amp;#39;s on Tumblr,
which is not actually quite the same as a blogging platform, but that&amp;#39;s another issue.&lt;/p&gt;

&lt;p&gt;Basically I have a blog because I like transparency in general - so I have this fantasy
that my blog can be a transparent stream for my consciousness to be exposed to the world.
And yet I still get upset that hardly anyone visits it.&lt;/p&gt;

&lt;p&gt;Which raises the question of quality. Should I just throw any old rambling thoughts out there
immediately and either come back to refactor them later (this has never happened) or just let 
search engines filter the wheat from the chaff? I don&amp;#39;t think this is actually a way to gain
trust and build readership.&lt;/p&gt;

&lt;p&gt;But then maybe I don&amp;#39;t care about readership. The act of writing down my thoughts is both therapeutic
for me and helps me build memories, so that&amp;#39;s probably a good thing. And these writings may as well be
public so if, on the off-chance, someone else might find them useful they can benefit from them.&lt;/p&gt;

&lt;p&gt;So in conclusion, my blog &lt;em&gt;is&lt;/em&gt; a place for half-formed rambling thoughts of mine, and it shouldn&amp;#39;t
feel self-conscious about its lack of quality because it&amp;#39;s not about the quality, and it doesn&amp;#39;t need
high readership.&lt;/p&gt;

&lt;p&gt;Wonderful. QED. Bitch.&lt;/p&gt;

&lt;p&gt;Welcome to my blog.&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">I am a published author (of a journal article)!</title>
        <link href="https://robinwinslow.co.uk/2012/09/28/i-am-a-published-author-of-a-journal-article/"/>
        <updated>2012-09-28T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2012/09/28/i-am-a-published-author-of-a-journal-article</id>
        <content type="html">&lt;p&gt;Woop!&lt;/p&gt;

&lt;p&gt;I just had &lt;a href=&quot;http://www.tandfonline.com/doi/abs/10.1080/00140139.2012.723140&quot;&gt;a paper&lt;/a&gt; published in the &lt;a href=&quot;http://www.tandfonline.com/&quot;&gt;Taylor &amp;amp; Francis&lt;/a&gt; &lt;a href=&quot;http://www.tandfonline.com/loi/terg20&quot;&gt;Ergonomics&lt;/a&gt; journal.&lt;/p&gt;

&lt;p&gt;It&amp;#39;s called &amp;quot;Micro-generation schemes: user behaviours and attitudes towards energy consumption&amp;quot;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.tandfonline.com/doi/pdf/10.1080/00140139.2012.723140&quot;&gt;Buy it from Taylor &amp;amp; Francis&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://resources.robinwinslow.uk/documents/StedmonWinslowLangley.pdf&quot;&gt;Download it for free&lt;/a&gt; from my server (am I allowed to do this?)&lt;/p&gt;

&lt;p&gt;Enjoy :)&lt;/p&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">Website front-end performance tips</title>
        <link href="https://robinwinslow.co.uk/2012/03/13/website-front-end-performance-tips/"/>
        <updated>2012-03-13T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2012/03/13/website-front-end-performance-tips</id>
        <content type="html">&lt;h1 id=&quot;design-performance&quot;&gt;Design performance&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Write the whole page design in CSS (no images) if at all possible&lt;/li&gt;
&lt;li&gt;Mobile-first (with no images at all)&lt;/li&gt;
&lt;li&gt;Design the page so all &lt;em&gt;all&lt;/em&gt; images could be lazy-loaded without the page looking stupid&lt;/li&gt;
&lt;li&gt;Obviously don&amp;#39;t include unnecessary elements in the page&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;architecture&quot;&gt;Architecture&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Lazy-load &lt;em&gt;all&lt;/em&gt; images, depending on visibility&lt;/li&gt;
&lt;li&gt;Serve all files yourself - then you can bundle them up into a single request&lt;/li&gt;
&lt;li&gt;Use sprites wherever possible&lt;/li&gt;
&lt;li&gt;Try to have &lt;em&gt;one&lt;/em&gt; request for all JS, and one for all CSS.&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
    <entry>
        <title type="html">CSS best practice tips</title>
        <link href="https://robinwinslow.co.uk/2012/03/13/css-best-practice-tips/"/>
        <updated>2012-03-13T00:00:00+00:00</updated>
        <id>https://robinwinslow.co.uk/2012/03/13/css-best-practice-tips</id>
        <content type="html">&lt;h1 id=&quot;never-use-ids&quot;&gt;Never use IDs&lt;/h1&gt;

&lt;p&gt;They are useless. You get no performance benefit from using IDs, and you confuse yourself by
adding more specificity rules that you have to think about (IDs bind harder than classes).
There is no situation where you use an ID that you could not instead use a class. Only use IDs
in mark-up to show sections in the document - for # hashtags. Never use them for CSS.&lt;/p&gt;

&lt;h1 id=&quot;always-make-rules-as-generic-as-possible&quot;&gt;Always make rules as generic as possible&lt;/h1&gt;

&lt;p&gt;You never know when a rule might need to be re-used, on a different element, so you should avoid
ever limiting a class to a specific tag name. So div.header is wrong. Just do .header. Also
using really specific rules makes it more likely that your CSS is going to get really confusing.&lt;/p&gt;

&lt;h1 id=&quot;use-class-with-semantics-in-mind&quot;&gt;Use class with semantics in mind&lt;/h1&gt;

&lt;p&gt;From &lt;a href=&quot;http://www.w3.org/QA/Tips/goodclassnames#id01&quot;&gt;the W3C&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Good names don&amp;#39;t change. Think about why you want something to look a certain way,
and not really about how it should look. Looks can always change, but the reasons for giving
something a look stay the same.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You might have to break this rule if using CSS frameworks.
I&amp;#39;ll leave that one up to you.&lt;/p&gt;

&lt;h1 id=&quot;useful-resources-for-css-best-practice&quot;&gt;Useful resources for CSS best practice&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://csslint.net/about.html&quot;&gt;About CSS lint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.webdesignerdepot.com/2009/05/10-best-css-practices-to-improve-your-code/&quot;&gt;Web Designer Depot - CSS best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.evotech.net/blog/2007/04/css-best-practices/&quot;&gt;Evotech - CSS best practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/&quot;&gt;Paul Irish - A new way of doing conditional IE CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </entry>
    
</feed>
